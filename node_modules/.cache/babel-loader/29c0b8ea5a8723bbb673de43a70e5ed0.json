{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withLDProvider = void 0;\n\nvar React = __importStar(require(\"react\"));\n\nvar types_1 = require(\"./types\");\n\nvar provider_1 = __importDefault(require(\"./provider\"));\n\nvar hoist_non_react_statics_1 = __importDefault(require(\"hoist-non-react-statics\"));\n/**\n * `withLDProvider` is a function which accepts a config object which is used to\n * initialize `launchdarkly-js-client-sdk`.\n *\n * This HOC handles passing configuration to the `LDProvider`, which does the following:\n * - It initializes the ldClient instance by calling `launchdarkly-js-client-sdk` initialize on `componentDidMount`\n * - It saves all flags and the ldClient instance in the context API\n * - It subscribes to flag changes and propagate them through the context API\n *\n * The difference between `withLDProvider` and `asyncWithLDProvider` is that `withLDProvider` initializes\n * `launchdarkly-js-client-sdk` at `componentDidMount`. This means your flags and the ldClient are only available after\n * your app has mounted. This can result in a flicker due to flag changes at startup time.\n *\n * `asyncWithLDProvider` initializes `launchdarkly-js-client-sdk` at the entry point of your app prior to render.\n * This means that your flags and the ldClient are ready at the beginning of your app. This ensures your app does not\n * flicker due to flag changes at startup time.\n *\n * @param config - The configuration used to initialize LaunchDarkly's JS SDK\n * @return A function which accepts your root React component and returns a HOC\n */\n\n\nfunction withLDProvider(config) {\n  return function withLDProviderHoc(WrappedComponent) {\n    var userReactOptions = config.reactOptions;\n\n    var reactOptions = __assign(__assign({}, types_1.defaultReactOptions), userReactOptions);\n\n    var providerProps = __assign(__assign({}, config), {\n      reactOptions: reactOptions\n    });\n\n    var HoistedComponent =\n    /** @class */\n    function (_super) {\n      __extends(HoistedComponent, _super);\n\n      function HoistedComponent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n      }\n\n      HoistedComponent.prototype.render = function () {\n        return React.createElement(provider_1.default, __assign({}, providerProps), React.createElement(WrappedComponent, __assign({}, this.props)));\n      };\n\n      return HoistedComponent;\n    }(React.Component);\n\n    (0, hoist_non_react_statics_1.default)(HoistedComponent, WrappedComponent);\n    return HoistedComponent;\n  };\n}\n\nexports.withLDProvider = withLDProvider;\nexports.default = withLDProvider;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;AAoBA,SAAgBA,cAAhB,CACEC,MADF,EACwB;EAEtB,OAAO,SAASC,iBAAT,CAA2BC,gBAA3B,EAAmE;IAChE,IAAcC,gBAAgB,GAAKH,MAAM,aAAzC;;IACR,IAAMI,YAAY,yBAAQC,2BAAR,GAAgCF,gBAAhC,CAAlB;;IACA,IAAMG,aAAa,yBAAQN,MAAR,GAAc;MAAEI,YAAY;IAAd,CAAd,CAAnB;;IAEA;IAAA;IAAA;MAA+BG;;MAA/B;;MAQC;;MAPCC;QACE,OACEC,oBAACC,kBAAD,EAAWC,aAAKL,aAAL,CAAX,EACEG,oBAACP,gBAAD,EAAiBS,aAAK,KAAKC,KAAV,CAAjB,CADF,CADF;MAKD,CAND;;MAOF;IAAC,CARD,CAA+BH,KAAK,CAACI,SAArC;;IAUA,uCAAqBL,gBAArB,EAAuCN,gBAAvC;IAEA,OAAOM,gBAAP;EACD,CAlBD;AAmBD;;AAtBDM;AAwBAA,kBAAef,cAAf","names":["withLDProvider","config","withLDProviderHoc","WrappedComponent","userReactOptions","reactOptions","types_1","providerProps","__extends","HoistedComponent","React","provider_1","__assign","props","Component","exports"],"sources":["/Users/tpat/Desktop/launchdarkly/launchdarkly/node_modules/launchdarkly-react-client-sdk/src/withLDProvider.tsx"],"sourcesContent":["import * as React from 'react';\nimport { defaultReactOptions, ProviderConfig } from './types';\nimport LDProvider from './provider';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\n/**\n * `withLDProvider` is a function which accepts a config object which is used to\n * initialize `launchdarkly-js-client-sdk`.\n *\n * This HOC handles passing configuration to the `LDProvider`, which does the following:\n * - It initializes the ldClient instance by calling `launchdarkly-js-client-sdk` initialize on `componentDidMount`\n * - It saves all flags and the ldClient instance in the context API\n * - It subscribes to flag changes and propagate them through the context API\n *\n * The difference between `withLDProvider` and `asyncWithLDProvider` is that `withLDProvider` initializes\n * `launchdarkly-js-client-sdk` at `componentDidMount`. This means your flags and the ldClient are only available after\n * your app has mounted. This can result in a flicker due to flag changes at startup time.\n *\n * `asyncWithLDProvider` initializes `launchdarkly-js-client-sdk` at the entry point of your app prior to render.\n * This means that your flags and the ldClient are ready at the beginning of your app. This ensures your app does not\n * flicker due to flag changes at startup time.\n *\n * @param config - The configuration used to initialize LaunchDarkly's JS SDK\n * @return A function which accepts your root React component and returns a HOC\n */\nexport function withLDProvider<T = {}>(\n  config: ProviderConfig,\n): (WrappedComponent: React.ComponentType<T>) => React.ComponentType<T> {\n  return function withLDProviderHoc(WrappedComponent: React.ComponentType<T>): React.ComponentType<T> {\n    const { reactOptions: userReactOptions } = config;\n    const reactOptions = { ...defaultReactOptions, ...userReactOptions };\n    const providerProps = { ...config, reactOptions };\n\n    class HoistedComponent extends React.Component<T> {\n      render() {\n        return (\n          <LDProvider {...providerProps}>\n            <WrappedComponent {...this.props} />\n          </LDProvider>\n        );\n      }\n    }\n\n    hoistNonReactStatics(HoistedComponent, WrappedComponent);\n\n    return HoistedComponent;\n  };\n}\n\nexport default withLDProvider;\n"]},"metadata":{},"sourceType":"script"}