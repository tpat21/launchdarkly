{"ast":null,"code":"var _jsxFileName = \"/Users/tpat/Desktop/launchdarkly/launchdarkly/src/helloWorld.js\";\nimport { withLDConsumer } from 'launchdarkly-react-client-sdk'; // Pass the flags prop and return an element based on the state of the feature flag key\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HelloWorld = _ref => {\n  let {\n    flags\n  } = _ref;\n  return flags.test01 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Flag on\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 27\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Flag off\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 48\n  }, this);\n};\n\n_c = HelloWorld;\nexport default withLDConsumer()(HelloWorld);\n\nvar _c;\n\n$RefreshReg$(_c, \"HelloWorld\");","map":{"version":3,"names":["withLDConsumer","HelloWorld","flags","test01"],"sources":["/Users/tpat/Desktop/launchdarkly/launchdarkly/src/helloWorld.js"],"sourcesContent":["import { withLDConsumer } from 'launchdarkly-react-client-sdk';\n\n// Pass the flags prop and return an element based on the state of the feature flag key\nconst HelloWorld = ({ flags }) => {\n    return flags.test01 ? <div>Flag on</div> : <div>Flag off</div>;\n};\n\nexport default withLDConsumer()(HelloWorld);\n"],"mappings":";AAAA,SAASA,cAAT,QAA+B,+BAA/B,C,CAEA;;;;AACA,MAAMC,UAAU,GAAG,QAAe;EAAA,IAAd;IAAEC;EAAF,CAAc;EAC9B,OAAOA,KAAK,CAACC,MAAN,gBAAe;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAf,gBAAoC;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAA3C;AACH,CAFD;;KAAMF,U;AAIN,eAAeD,cAAc,GAAGC,UAAH,CAA7B"},"metadata":{},"sourceType":"module"}