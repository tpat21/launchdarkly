{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar types_1 = require(\"./types\");\n\nvar context_1 = require(\"./context\");\n\nvar initLDClient_1 = __importDefault(require(\"./initLDClient\"));\n\nvar utils_1 = require(\"./utils\");\n/**\n * The `LDProvider` is a component which accepts a config object which is used to\n * initialize `launchdarkly-js-client-sdk`.\n *\n * This Provider does three things:\n * - It initializes the ldClient instance by calling `launchdarkly-js-client-sdk` initialize on `componentDidMount`\n * - It saves all flags and the ldClient instance in the context API\n * - It subscribes to flag changes and propagate them through the context API\n *\n * Because the `launchdarkly-js-client-sdk` in only initialized on `componentDidMount`, your flags and the\n * ldClient are only available after your app has mounted. This can result in a flicker due to flag changes at\n * startup time.\n *\n * This component can be used as a standalone provider. However, be mindful to only include the component once\n * within your application. This provider is used inside the `withLDProviderHOC` and can be used instead to initialize\n * the `launchdarkly-js-client-sdk`. For async initialization, check out the `asyncWithLDProvider` function\n */\n\n\nvar LDProvider =\n/** @class */\nfunction (_super) {\n  __extends(LDProvider, _super);\n\n  function LDProvider(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.getReactOptions = function () {\n      return __assign(__assign({}, types_1.defaultReactOptions), _this.props.reactOptions);\n    };\n\n    _this.subscribeToChanges = function (ldClient) {\n      var targetFlags = _this.props.flags;\n      ldClient.on('change', function (changes) {\n        var flattened = (0, utils_1.getFlattenedFlagsFromChangeset)(changes, targetFlags, _this.getReactOptions());\n\n        if (Object.keys(flattened).length > 0) {\n          _this.setState(function (_a) {\n            var flags = _a.flags;\n            return {\n              flags: __assign(__assign({}, flags), flattened)\n            };\n          });\n        }\n      });\n    };\n\n    _this.initLDClient = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a, clientSideID, flags, options, user, ldClient, reactOptions, fetchedFlags, initialisedOutput;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              _a = this.props, clientSideID = _a.clientSideID, flags = _a.flags, options = _a.options, user = _a.user;\n              return [4\n              /*yield*/\n              , this.props.ldClient];\n\n            case 1:\n              ldClient = _b.sent();\n              reactOptions = this.getReactOptions();\n              if (!ldClient) return [3\n              /*break*/\n              , 2];\n              fetchedFlags = (0, utils_1.fetchFlags)(ldClient, reactOptions, flags);\n              return [3\n              /*break*/\n              , 4];\n\n            case 2:\n              return [4\n              /*yield*/\n              , (0, initLDClient_1.default)(clientSideID, user, reactOptions, options, flags)];\n\n            case 3:\n              initialisedOutput = _b.sent();\n              fetchedFlags = initialisedOutput.flags;\n              ldClient = initialisedOutput.ldClient;\n              _b.label = 4;\n\n            case 4:\n              this.setState({\n                flags: fetchedFlags,\n                ldClient: ldClient\n              });\n              this.subscribeToChanges(ldClient);\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    var options = props.options;\n    _this.state = {\n      flags: {},\n      ldClient: undefined\n    };\n\n    if (options) {\n      var bootstrap = options.bootstrap;\n\n      if (bootstrap && bootstrap !== 'localStorage') {\n        var useCamelCaseFlagKeys = _this.getReactOptions().useCamelCaseFlagKeys;\n\n        var flags = useCamelCaseFlagKeys ? (0, utils_1.camelCaseKeys)(bootstrap) : bootstrap;\n        _this.state = {\n          flags: flags,\n          ldClient: undefined\n        };\n      }\n    }\n\n    return _this;\n  }\n\n  LDProvider.prototype.componentDidMount = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, user, deferInitialization;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = this.props, user = _a.user, deferInitialization = _a.deferInitialization;\n\n            if (deferInitialization && !user) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            return [4\n            /*yield*/\n            , this.initLDClient()];\n\n          case 1:\n            _b.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  LDProvider.prototype.componentDidUpdate = function (prevProps) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, user, deferInitialization, userJustLoaded;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = this.props, user = _a.user, deferInitialization = _a.deferInitialization;\n            userJustLoaded = !prevProps.user && user;\n            if (!(deferInitialization && userJustLoaded)) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.initLDClient()];\n\n          case 1:\n            _b.sent();\n\n            _b.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  LDProvider.prototype.render = function () {\n    return react_1.default.createElement(context_1.Provider, {\n      value: this.state\n    }, this.props.children);\n  };\n\n  return LDProvider;\n}(react_1.Component);\n\nexports.default = LDProvider;","map":{"version":3,"mappings":"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","names":["__extends","props","_super","_this","types_1","reactOptions","ldClient","targetFlags","flags","on","changes","flattened","getReactOptions","Object","keys","length","setState","_a","clientSideID","options","user","_b","fetchedFlags","initialisedOutput","subscribeToChanges","state","undefined","bootstrap","useCamelCaseFlagKeys","LDProvider","deferInitialization","initLDClient","prevProps","userJustLoaded","react_1","context_1","value","children","exports"],"sources":["/Users/tpat/Desktop/launchdarkly/launchdarkly/node_modules/launchdarkly-react-client-sdk/src/provider.tsx"],"sourcesContent":["import React, { Component, PropsWithChildren } from 'react';\nimport { LDClient, LDFlagSet, LDFlagChangeset } from 'launchdarkly-js-client-sdk';\nimport { EnhancedComponent, ProviderConfig, defaultReactOptions } from './types';\nimport { Provider, LDContext as HocState } from './context';\nimport initLDClient from './initLDClient';\nimport { camelCaseKeys, fetchFlags, getFlattenedFlagsFromChangeset } from './utils';\n\n/**\n * The `LDProvider` is a component which accepts a config object which is used to\n * initialize `launchdarkly-js-client-sdk`.\n *\n * This Provider does three things:\n * - It initializes the ldClient instance by calling `launchdarkly-js-client-sdk` initialize on `componentDidMount`\n * - It saves all flags and the ldClient instance in the context API\n * - It subscribes to flag changes and propagate them through the context API\n *\n * Because the `launchdarkly-js-client-sdk` in only initialized on `componentDidMount`, your flags and the\n * ldClient are only available after your app has mounted. This can result in a flicker due to flag changes at\n * startup time.\n *\n * This component can be used as a standalone provider. However, be mindful to only include the component once\n * within your application. This provider is used inside the `withLDProviderHOC` and can be used instead to initialize\n * the `launchdarkly-js-client-sdk`. For async initialization, check out the `asyncWithLDProvider` function\n */\nclass LDProvider extends Component<PropsWithChildren<ProviderConfig>, HocState> implements EnhancedComponent {\n  readonly state: Readonly<HocState>;\n\n  constructor(props: ProviderConfig) {\n    super(props);\n\n    const { options } = props;\n\n    this.state = {\n      flags: {},\n      ldClient: undefined,\n    };\n\n    if (options) {\n      const { bootstrap } = options;\n      if (bootstrap && bootstrap !== 'localStorage') {\n        const { useCamelCaseFlagKeys } = this.getReactOptions();\n        const flags = useCamelCaseFlagKeys ? camelCaseKeys(bootstrap) : bootstrap;\n        this.state = {\n          flags,\n          ldClient: undefined,\n        };\n      }\n    }\n  }\n\n  getReactOptions = () => ({ ...defaultReactOptions, ...this.props.reactOptions });\n\n  subscribeToChanges = (ldClient: LDClient) => {\n    const { flags: targetFlags } = this.props;\n    ldClient.on('change', (changes: LDFlagChangeset) => {\n      const flattened: LDFlagSet = getFlattenedFlagsFromChangeset(changes, targetFlags, this.getReactOptions());\n      if (Object.keys(flattened).length > 0) {\n        this.setState(({ flags }) => ({ flags: { ...flags, ...flattened } }));\n      }\n    });\n  };\n\n  initLDClient = async () => {\n    const { clientSideID, flags, options, user } = this.props;\n    let ldClient = await this.props.ldClient;\n    const reactOptions = this.getReactOptions();\n    let fetchedFlags;\n    if (ldClient) {\n      fetchedFlags = fetchFlags(ldClient, reactOptions, flags);\n    } else {\n      const initialisedOutput = await initLDClient(clientSideID, user, reactOptions, options, flags);\n      fetchedFlags = initialisedOutput.flags;\n      ldClient = initialisedOutput.ldClient;\n    }\n    this.setState({ flags: fetchedFlags, ldClient });\n    this.subscribeToChanges(ldClient);\n  };\n\n  async componentDidMount() {\n    const { user, deferInitialization } = this.props;\n    if (deferInitialization && !user) {\n      return;\n    }\n\n    await this.initLDClient();\n  }\n\n  async componentDidUpdate(prevProps: ProviderConfig) {\n    const { user, deferInitialization } = this.props;\n    const userJustLoaded = !prevProps.user && user;\n    if (deferInitialization && userJustLoaded) {\n      await this.initLDClient();\n    }\n  }\n\n  render() {\n    return <Provider value={this.state}>{this.props.children}</Provider>;\n  }\n}\n\nexport default LDProvider;\n"]},"metadata":{},"sourceType":"script"}