{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar types_1 = require(\"./types\");\n\nvar context_1 = require(\"./context\");\n\nvar initLDClient_1 = __importDefault(require(\"./initLDClient\"));\n\nvar utils_1 = require(\"./utils\");\n/**\n * This is an async function which initializes LaunchDarkly's JS SDK (`launchdarkly-js-client-sdk`)\n * and awaits it so all flags and the ldClient are ready before the consumer app is rendered.\n *\n * The difference between `withLDProvider` and `asyncWithLDProvider` is that `withLDProvider` initializes\n * `launchdarkly-js-client-sdk` at componentDidMount. This means your flags and the ldClient are only available after\n * your app has mounted. This can result in a flicker due to flag changes at startup time.\n *\n * `asyncWithLDProvider` initializes `launchdarkly-js-client-sdk` at the entry point of your app prior to render.\n * This means that your flags and the ldClient are ready at the beginning of your app. This ensures your app does not\n * flicker due to flag changes at startup time.\n *\n * `asyncWithLDProvider` accepts a config object which is used to initialize `launchdarkly-js-client-sdk`.\n *\n * `asyncWithLDProvider` does not support the `deferInitialization` config option because `asyncWithLDProvider` needs\n * to be initialized at the entry point prior to render to ensure your flags and the ldClient are ready at the beginning\n * of your app.\n *\n * It returns a provider which is a React FunctionComponent which:\n * - saves all flags and the ldClient instance in the context API\n * - subscribes to flag changes and propagate them through the context API\n *\n * @param config - The configuration used to initialize LaunchDarkly's JS SDK\n */\n\n\nfunction asyncWithLDProvider(config) {\n  return __awaiter(this, void 0, void 0, function () {\n    var clientSideID, user, targetFlags, options, userReactOptions, reactOptions, ldClient, LDProvider;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          clientSideID = config.clientSideID, user = config.user, targetFlags = config.flags, options = config.options, userReactOptions = config.reactOptions;\n          reactOptions = __assign(__assign({}, types_1.defaultReactOptions), userReactOptions);\n          return [4\n          /*yield*/\n          , (0, initLDClient_1.default)(clientSideID, user, reactOptions, options, targetFlags)];\n\n        case 1:\n          ldClient = _a.sent().ldClient;\n\n          LDProvider = function (_a) {\n            var children = _a.children;\n\n            var _b = (0, react_1.useState)({\n              flags: (0, utils_1.fetchFlags)(ldClient, reactOptions, targetFlags),\n              ldClient: ldClient\n            }),\n                ldData = _b[0],\n                setLDData = _b[1];\n\n            (0, react_1.useEffect)(function () {\n              if (options) {\n                var bootstrap = options.bootstrap;\n\n                if (bootstrap && bootstrap !== 'localStorage') {\n                  var bootstrappedFlags_1 = reactOptions.useCamelCaseFlagKeys ? (0, utils_1.camelCaseKeys)(bootstrap) : bootstrap;\n                  setLDData(function (prev) {\n                    return __assign(__assign({}, prev), {\n                      flags: bootstrappedFlags_1\n                    });\n                  });\n                }\n              }\n\n              ldClient.on('change', function (changes) {\n                var flattened = (0, utils_1.getFlattenedFlagsFromChangeset)(changes, targetFlags, reactOptions);\n\n                if (Object.keys(flattened).length > 0) {\n                  setLDData(function (prev) {\n                    return __assign(__assign({}, prev), {\n                      flags: __assign(__assign({}, prev.flags), flattened)\n                    });\n                  });\n                }\n              });\n            }, []);\n            return react_1.default.createElement(context_1.Provider, {\n              value: ldData\n            }, children);\n          };\n\n          return [2\n          /*return*/\n          , LDProvider];\n      }\n    });\n  });\n}\n\nexports.default = asyncWithLDProvider;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,SAA8BA,mBAA9B,CAAkDC,MAAlD,EAA6E;;;;;;UACnEC,YAAY,GAAwED,MAAM,aAA1F,EAAcE,IAAI,GAAkEF,MAAM,KAA1F,EAA2BG,WAAW,GAA8CH,MAAM,MAA1F,EAAwCI,OAAO,GAAqCJ,MAAM,QAA1F,EAA+DK,gBAAgB,GAAKL,MAAM,aAA1F;UACFM,YAAY,yBAAQC,2BAAR,GAAgCF,gBAAhC,CAAZ;UACe;UAAA;UAAA,EAAM,4BAAaJ,YAAb,EAA2BC,IAA3B,EAAiCI,YAAjC,EAA+CF,OAA/C,EAAwDD,WAAxD,CAAN;;;UAAbK,QAAQ,GAAKC,UAA0ED,QAAvF;;UAEFE,UAAU,GAAG,UAACD,EAAD,EAAsC;gBAAnCE,QAAQ;;YACtB,SAAsB,sBAAS;cACnCC,KAAK,EAAE,wBAAWJ,QAAX,EAAqBF,YAArB,EAAmCH,WAAnC,CAD4B;cAEnCK,QAAQ;YAF2B,CAAT,CAAtB;YAAA,IAACK,MAAM,QAAP;YAAA,IAASC,SAAS,QAAlB;;YAKN,uBAAU;cACR,IAAIV,OAAJ,EAAa;gBACH,aAAS,GAAKA,OAAO,UAArB;;gBACR,IAAIW,SAAS,IAAIA,SAAS,KAAK,cAA/B,EAA+C;kBAC7C,IAAMC,mBAAiB,GAAGV,YAAY,CAACW,oBAAb,GAAoC,2BAAcF,SAAd,CAApC,GAA+DA,SAAzF;kBACAD,SAAS,CAAC,UAACI,IAAD,EAAK;oBAAK,6BAAMA,IAAN,GAAU;sBAAEN,KAAK,EAAEI;oBAAT,CAAV;kBAAuC,CAAlD,CAAT;gBACD;cACF;;cAEDR,QAAQ,CAACW,EAAT,CAAY,QAAZ,EAAsB,UAACC,OAAD,EAAyB;gBAC7C,IAAMC,SAAS,GAAc,4CAA+BD,OAA/B,EAAwCjB,WAAxC,EAAqDG,YAArD,CAA7B;;gBACA,IAAIgB,MAAM,CAACC,IAAP,CAAYF,SAAZ,EAAuBG,MAAvB,GAAgC,CAApC,EAAuC;kBACrCV,SAAS,CAAC,UAACI,IAAD,EAAK;oBAAK,6BAAMA,IAAN,GAAU;sBAAEN,KAAK,wBAAOM,IAAI,CAACN,KAAZ,GAAsBS,SAAtB;oBAAP,CAAV;kBAAqD,CAAhE,CAAT;gBACD;cACF,CALD;YAMD,CAfD,EAeG,EAfH;YAiBA,OAAOI,8BAACC,kBAAD,EAAS;cAACC,KAAK,EAAEd;YAAR,CAAT,EAA0BF,QAA1B,CAAP;UACD,CAxBK;;UA0BN;UAAA;UAAA,EAAOD,UAAP;;;;AACD;;AAhCDkB","names":["asyncWithLDProvider","config","clientSideID","user","targetFlags","options","userReactOptions","reactOptions","types_1","ldClient","_a","LDProvider","children","flags","ldData","setLDData","bootstrap","bootstrappedFlags_1","useCamelCaseFlagKeys","prev","on","changes","flattened","Object","keys","length","react_1","context_1","value","exports"],"sources":["/Users/tpat/Desktop/launchdarkly/node_modules/launchdarkly-react-client-sdk/src/asyncWithLDProvider.tsx"],"sourcesContent":["import React, { useState, useEffect, ReactNode } from 'react';\nimport { LDFlagSet, LDFlagChangeset } from 'launchdarkly-js-client-sdk';\nimport { AsyncProviderConfig, defaultReactOptions } from './types';\nimport { Provider } from './context';\nimport initLDClient from './initLDClient';\nimport { camelCaseKeys, fetchFlags, getFlattenedFlagsFromChangeset } from './utils';\n\n/**\n * This is an async function which initializes LaunchDarkly's JS SDK (`launchdarkly-js-client-sdk`)\n * and awaits it so all flags and the ldClient are ready before the consumer app is rendered.\n *\n * The difference between `withLDProvider` and `asyncWithLDProvider` is that `withLDProvider` initializes\n * `launchdarkly-js-client-sdk` at componentDidMount. This means your flags and the ldClient are only available after\n * your app has mounted. This can result in a flicker due to flag changes at startup time.\n *\n * `asyncWithLDProvider` initializes `launchdarkly-js-client-sdk` at the entry point of your app prior to render.\n * This means that your flags and the ldClient are ready at the beginning of your app. This ensures your app does not\n * flicker due to flag changes at startup time.\n *\n * `asyncWithLDProvider` accepts a config object which is used to initialize `launchdarkly-js-client-sdk`.\n *\n * `asyncWithLDProvider` does not support the `deferInitialization` config option because `asyncWithLDProvider` needs\n * to be initialized at the entry point prior to render to ensure your flags and the ldClient are ready at the beginning\n * of your app.\n *\n * It returns a provider which is a React FunctionComponent which:\n * - saves all flags and the ldClient instance in the context API\n * - subscribes to flag changes and propagate them through the context API\n *\n * @param config - The configuration used to initialize LaunchDarkly's JS SDK\n */\nexport default async function asyncWithLDProvider(config: AsyncProviderConfig) {\n  const { clientSideID, user, flags: targetFlags, options, reactOptions: userReactOptions } = config;\n  const reactOptions = { ...defaultReactOptions, ...userReactOptions };\n  const { ldClient } = await initLDClient(clientSideID, user, reactOptions, options, targetFlags);\n\n  const LDProvider = ({ children }: { children: ReactNode }) => {\n    const [ldData, setLDData] = useState({\n      flags: fetchFlags(ldClient, reactOptions, targetFlags),\n      ldClient,\n    });\n\n    useEffect(() => {\n      if (options) {\n        const { bootstrap } = options;\n        if (bootstrap && bootstrap !== 'localStorage') {\n          const bootstrappedFlags = reactOptions.useCamelCaseFlagKeys ? camelCaseKeys(bootstrap) : bootstrap;\n          setLDData((prev) => ({ ...prev, flags: bootstrappedFlags }));\n        }\n      }\n\n      ldClient.on('change', (changes: LDFlagChangeset) => {\n        const flattened: LDFlagSet = getFlattenedFlagsFromChangeset(changes, targetFlags, reactOptions);\n        if (Object.keys(flattened).length > 0) {\n          setLDData((prev) => ({ ...prev, flags: { ...prev.flags, ...flattened } }));\n        }\n      });\n    }, []);\n\n    return <Provider value={ldData}>{children}</Provider>;\n  };\n\n  return LDProvider;\n}\n"]},"metadata":{},"sourceType":"script"}