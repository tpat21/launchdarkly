{"ast":null,"code":"var _jsxFileName = \"/Users/tpat/Desktop/launchdarkly/launchdarkly/src/test.js\";\nimport { withLDConsumer } from 'launchdarkly-react-client-sdk'; // Pass the flags prop and return an element based on the state of the feature flag key\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Testing = _ref => {\n  let {\n    flags\n  } = _ref;\n  return flags.test01 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Flag on(Test 01)\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 27\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Flag off(Test 01)\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 57\n  }, this);\n};\n\n_c = Testing;\nexport default withLDConsumer()(Testing);\n\nvar _c;\n\n$RefreshReg$(_c, \"Testing\");","map":{"version":3,"names":["withLDConsumer","Testing","flags","test01"],"sources":["/Users/tpat/Desktop/launchdarkly/launchdarkly/src/test.js"],"sourcesContent":["import { withLDConsumer } from 'launchdarkly-react-client-sdk';\n\n// Pass the flags prop and return an element based on the state of the feature flag key\nconst Testing = ({ flags }) => {\n    return flags.test01 ? <div>Flag on(Test 01)</div> : <div>Flag off(Test 01)</div>;\n};\n\nexport default withLDConsumer()(Testing);\n"],"mappings":";AAAA,SAASA,cAAT,QAA+B,+BAA/B,C,CAEA;;;;AACA,MAAMC,OAAO,GAAG,QAAe;EAAA,IAAd;IAAEC;EAAF,CAAc;EAC3B,OAAOA,KAAK,CAACC,MAAN,gBAAe;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAf,gBAA6C;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAApD;AACH,CAFD;;KAAMF,O;AAIN,eAAeD,cAAc,GAAGC,OAAH,CAA7B"},"metadata":{},"sourceType":"module"}