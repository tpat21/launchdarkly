{"version":3,"file":"ldclient-common.es.js","sources":["../src/errors.js","../node_modules/base64-js/index.js","../node_modules/fast-deep-equal/index.js","../src/utils.js","../node_modules/uuid/lib/bytesToUuid.js","../node_modules/uuid/lib/rng-browser.js","../node_modules/uuid/v1.js","../src/loggers.js","../src/messages.js","../src/configuration.js","../src/headers.js","../src/EventSender.js","../src/EventSummarizer.js","../src/UserFilter.js","../src/EventEmitter.js","../src/InitializationState.js","../src/PersistentFlagStore.js","../src/Stream.js","../src/Requestor.js","../src/promiseCoalescer.js","../src/UserValidator.js","../src/diagnosticEvents.js","../src/index.js","../src/PersistentStorage.js","../src/EventProcessor.js","../src/Identity.js"],"sourcesContent":["function createCustomError(name) {\n  function CustomError(message, code) {\n    Error.captureStackTrace && Error.captureStackTrace(this, this.constructor);\n    this.message = message;\n    this.code = code;\n  }\n\n  CustomError.prototype = new Error();\n  CustomError.prototype.name = name;\n  CustomError.prototype.constructor = CustomError;\n\n  return CustomError;\n}\n\nexport const LDUnexpectedResponseError = createCustomError('LaunchDarklyUnexpectedResponseError');\nexport const LDInvalidEnvironmentIdError = createCustomError('LaunchDarklyInvalidEnvironmentIdError');\nexport const LDInvalidUserError = createCustomError('LaunchDarklyInvalidUserError');\nexport const LDInvalidEventKeyError = createCustomError('LaunchDarklyInvalidEventKeyError');\nexport const LDInvalidArgumentError = createCustomError('LaunchDarklyInvalidArgumentError');\nexport const LDFlagFetchError = createCustomError('LaunchDarklyFlagFetchError');\nexport const LDInvalidDataError = createCustomError('LaunchDarklyInvalidDataError');\n\nexport function isHttpErrorRecoverable(status) {\n  if (status >= 400 && status < 500) {\n    return status === 400 || status === 408 || status === 429;\n  }\n  return true;\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","'use strict';\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a)\n      , arrB = isArray(b)\n      , i\n      , length\n      , key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = length; i-- !== 0;)\n      if (!hasProp.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  return a!==a && b!==b;\n};\n","import * as base64 from 'base64-js';\nimport fastDeepEqual from 'fast-deep-equal';\n\nconst userAttrsToStringify = ['key', 'secondary', 'ip', 'country', 'email', 'firstName', 'lastName', 'avatar', 'name'];\n\nexport function appendUrlPath(baseUrl, path) {\n  // Ensure that URL concatenation is done correctly regardless of whether the\n  // base URL has a trailing slash or not.\n  const trimBaseUrl = baseUrl.endsWith('/') ? baseUrl.substring(0, baseUrl.length - 1) : baseUrl;\n  return trimBaseUrl + (path.startsWith('/') ? '' : '/') + path;\n}\n\n// See http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\nexport function btoa(s) {\n  const escaped = unescape(encodeURIComponent(s));\n  return base64.fromByteArray(stringToBytes(escaped));\n}\n\nfunction stringToBytes(s) {\n  const b = [];\n  for (let i = 0; i < s.length; i++) {\n    b.push(s.charCodeAt(i));\n  }\n  return b;\n}\n\nexport function base64URLEncode(s) {\n  return (\n    btoa(s)\n      // eslint-disable-next-line\n      .replace(/=/g, '')\n      .replace(/\\+/g, '-')\n      .replace(/\\//g, '_')\n  );\n}\n\nexport function clone(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\n\nexport function deepEquals(a, b) {\n  return fastDeepEqual(a, b);\n}\n\n// Events emitted in LDClient's initialize method will happen before the consumer\n// can register a listener, so defer them to next tick.\nexport function onNextTick(cb) {\n  setTimeout(cb, 0);\n}\n\n/**\n * Wrap a promise to invoke an optional callback upon resolution or rejection.\n *\n * This function assumes the callback follows the Node.js callback type: (err, value) => void\n *\n * If a callback is provided:\n *   - if the promise is resolved, invoke the callback with (null, value)\n *   - if the promise is rejected, invoke the callback with (error, null)\n *\n * @param {Promise<any>} promise\n * @param {Function} callback\n * @returns Promise<any> | undefined\n */\nexport function wrapPromiseCallback(promise, callback) {\n  const ret = promise.then(\n    value => {\n      if (callback) {\n        setTimeout(() => {\n          callback(null, value);\n        }, 0);\n      }\n      return value;\n    },\n    error => {\n      if (callback) {\n        setTimeout(() => {\n          callback(error, null);\n        }, 0);\n      } else {\n        return Promise.reject(error);\n      }\n    }\n  );\n\n  return !callback ? ret : undefined;\n}\n\n/**\n * Takes a map of flag keys to values, and returns the more verbose structure used by the\n * client stream.\n */\nexport function transformValuesToVersionedValues(flags) {\n  const ret = {};\n  for (const key in flags) {\n    if (objectHasOwnProperty(flags, key)) {\n      ret[key] = { value: flags[key], version: 0 };\n    }\n  }\n  return ret;\n}\n\n/**\n * Converts the internal flag state map to a simple map of flag keys to values.\n */\nexport function transformVersionedValuesToValues(flagsState) {\n  const ret = {};\n  for (const key in flagsState) {\n    if (objectHasOwnProperty(flagsState, key)) {\n      ret[key] = flagsState[key].value;\n    }\n  }\n  return ret;\n}\n\n/**\n * Returns an array of event groups each of which can be safely URL-encoded\n * without hitting the safe maximum URL length of certain browsers.\n *\n * @param {number} maxLength maximum URL length targeted\n * @param {Array[Object}]} events queue of events to divide\n * @returns Array[Array[Object]]\n */\nexport function chunkUserEventsForUrl(maxLength, events) {\n  const allEvents = events.slice(0);\n  const allChunks = [];\n  let remainingSpace = maxLength;\n  let chunk;\n\n  while (allEvents.length > 0) {\n    chunk = [];\n\n    while (remainingSpace > 0) {\n      const event = allEvents.shift();\n      if (!event) {\n        break;\n      }\n      remainingSpace = remainingSpace - base64URLEncode(JSON.stringify(event)).length;\n      // If we are over the max size, put this one back on the queue\n      // to try in the next round, unless this event alone is larger\n      // than the limit, in which case, screw it, and try it anyway.\n      if (remainingSpace < 0 && chunk.length > 0) {\n        allEvents.unshift(event);\n      } else {\n        chunk.push(event);\n      }\n    }\n\n    remainingSpace = maxLength;\n    allChunks.push(chunk);\n  }\n\n  return allChunks;\n}\n\nexport function getLDUserAgentString(platform) {\n  const version = platform.version || VERSION;\n  return platform.userAgent + '/' + version;\n}\n\nexport function extend(...objects) {\n  return objects.reduce((acc, obj) => ({ ...acc, ...obj }), {});\n}\n\nexport function objectHasOwnProperty(object, name) {\n  return Object.prototype.hasOwnProperty.call(object, name);\n}\n\nexport function sanitizeUser(user) {\n  if (!user) {\n    return user;\n  }\n  let newUser;\n  for (const i in userAttrsToStringify) {\n    const attr = userAttrsToStringify[i];\n    const value = user[attr];\n    if (value !== undefined && typeof value !== 'string') {\n      newUser = newUser || { ...user };\n      newUser[attr] = String(value);\n    }\n  }\n  return newUser || user;\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","const logLevels = ['debug', 'info', 'warn', 'error', 'none'];\n\n/**\n * A simple logger that writes to stderr.\n */\nexport function commonBasicLogger(options, formatFn) {\n  if (options && options.destination && typeof options.destination !== 'function') {\n    throw new Error('destination for basicLogger was set to a non-function');\n  }\n\n  function toConsole(methodName) {\n    // The global console variable is not guaranteed to be defined at all times in all browsers:\n    // https://www.beyondjava.net/console-log-surprises-with-internet-explorer-11-and-edge\n    return function(line) {\n      if (console && console[methodName]) {\n        console[methodName].call(console, line);\n      }\n    };\n  }\n  const destinations =\n    options && options.destination\n      ? [options.destination, options.destination, options.destination, options.destination]\n      : [toConsole('log'), toConsole('info'), toConsole('warn'), toConsole('error')];\n  const prependLevelToMessage = !!(options && options.destination); // if we're writing to console.warn, etc. we don't need the prefix\n  const prefix =\n    !options || options.prefix === undefined || options.prefix === null ? '[LaunchDarkly] ' : options.prefix;\n\n  let minLevel = 1; // default is 'info'\n  if (options && options.level) {\n    for (let i = 0; i < logLevels.length; i++) {\n      if (logLevels[i] === options.level) {\n        minLevel = i;\n      }\n    }\n  }\n\n  function write(levelIndex, levelName, args) {\n    if (args.length < 1) {\n      return;\n    }\n    let line;\n    const fullPrefix = prependLevelToMessage ? levelName + ': ' + prefix : prefix;\n    if (args.length === 1 || !formatFn) {\n      line = fullPrefix + args[0];\n    } else {\n      const tempArgs = [...args];\n      tempArgs[0] = fullPrefix + tempArgs[0];\n      line = formatFn(...tempArgs);\n    }\n    try {\n      destinations[levelIndex](line);\n    } catch (err) {\n      console &&\n        console.log &&\n        console.log(\"[LaunchDarkly] Configured logger's \" + levelName + ' method threw an exception: ' + err);\n    }\n  }\n\n  const logger = {};\n  for (let i = 0; i < logLevels.length; i++) {\n    const levelName = logLevels[i];\n    if (levelName !== 'none') {\n      if (i < minLevel) {\n        logger[levelName] = () => {};\n      } else {\n        const levelIndex = i;\n        logger[levelName] = function() {\n          // can't use arrow function with \"arguments\"\n          write(levelIndex, levelName, arguments);\n        };\n      }\n    }\n  }\n\n  return logger;\n}\n\nexport function validateLogger(logger) {\n  logLevels.forEach(level => {\n    if (level !== 'none' && (!logger[level] || typeof logger[level] !== 'function')) {\n      throw new Error('Provided logger instance must support logger.' + level + '(...) method');\n      // Note that the SDK normally does not throw exceptions to the application, but that rule\n      // does not apply to LDClient.init() which will throw an exception if the parameters are so\n      // invalid that we cannot proceed with creating the client. An invalid logger meets those\n      // criteria since the SDK calls the logger during nearly all of its operations.\n    }\n  });\n}\n\n// Deprecated equivalent to commonBasicLogger\nexport function createConsoleLogger(level, maybePrefix) {\n  return commonBasicLogger({ level, prefix: maybePrefix });\n}\n","import * as errors from './errors';\n\nfunction errorString(err) {\n  if (err && err.message) {\n    return err.message;\n  }\n  if (typeof err === 'string' || err instanceof String) {\n    return err;\n  }\n  return JSON.stringify(err);\n}\n\nexport const clientInitialized = function() {\n  return 'LaunchDarkly client initialized';\n};\n\nconst docLink =\n  ' Please see https://docs.launchdarkly.com/sdk/client-side/javascript#initializing-the-client for instructions on SDK initialization.';\n\nexport const clientNotReady = function() {\n  return 'LaunchDarkly client is not ready';\n};\n\nexport const eventCapacityExceeded = function() {\n  return 'Exceeded event queue capacity. Increase capacity to avoid dropping events.';\n};\n\nexport const eventWithoutUser = function() {\n  return 'Be sure to call `identify` in the LaunchDarkly client: https://docs.launchdarkly.com/sdk/features/identify#javascript';\n};\n\nexport const invalidContentType = function(contentType) {\n  return 'Expected application/json content type but got \"' + contentType + '\"';\n};\n\nexport const invalidKey = function() {\n  return 'Event key must be a string';\n};\n\nexport const localStorageUnavailable = function(err) {\n  return 'local storage is unavailable: ' + errorString(err);\n};\n\nexport const networkError = e => 'network error' + (e ? ' (' + e + ')' : '');\n\n// We should remove unknownCustomEventKey in the future - see comments in track() in index.js\nexport const unknownCustomEventKey = function(key) {\n  return 'Custom event \"' + key + '\" does not exist';\n};\n\nexport const environmentNotFound = function() {\n  return 'Environment not found. Double check that you specified a valid environment/client-side ID.' + docLink;\n};\n\nexport const environmentNotSpecified = function() {\n  return 'No environment/client-side ID was specified.' + docLink;\n};\n\nexport const errorFetchingFlags = function(err) {\n  return 'Error fetching flag settings: ' + errorString(err);\n};\n\nexport const userNotSpecified = function() {\n  return 'No user specified.' + docLink;\n};\n\nexport const invalidUser = function() {\n  return 'Invalid user specified.' + docLink;\n};\n\nexport const invalidData = function() {\n  return 'Invalid data received from LaunchDarkly; connection may have been interrupted';\n};\n\nexport const bootstrapOldFormat = function() {\n  return (\n    'LaunchDarkly client was initialized with bootstrap data that did not include flag metadata. ' +\n    'Events may not be sent correctly.' +\n    docLink\n  );\n};\n\nexport const bootstrapInvalid = function() {\n  return 'LaunchDarkly bootstrap data is not available because the back end could not read the flags.';\n};\n\nexport const deprecated = function(oldName, newName) {\n  if (newName) {\n    return '\"' + oldName + '\" is deprecated, please use \"' + newName + '\"';\n  }\n  return '\"' + oldName + '\" is deprecated';\n};\n\nexport const httpErrorMessage = function(status, context, retryMessage) {\n  return (\n    'Received error ' +\n    status +\n    (status === 401 ? ' (invalid SDK key)' : '') +\n    ' for ' +\n    context +\n    ' - ' +\n    (errors.isHttpErrorRecoverable(status) ? retryMessage : 'giving up permanently')\n  );\n};\n\nexport const httpUnavailable = function() {\n  return 'Cannot make HTTP requests in this environment.' + docLink;\n};\n\nexport const identifyDisabled = function() {\n  return 'identify() has no effect here; it must be called on the main client instance';\n};\n\nexport const streamClosing = function() {\n  return 'Closing stream connection';\n};\n\nexport const streamConnecting = function(url) {\n  return 'Opening stream connection to ' + url;\n};\n\nexport const streamError = function(err, streamReconnectDelay) {\n  return (\n    'Error on stream connection: ' +\n    errorString(err) +\n    ', will continue retrying every ' +\n    streamReconnectDelay +\n    ' milliseconds.'\n  );\n};\n\nexport const unknownOption = name => 'Ignoring unknown config option \"' + name + '\"';\n\nexport const wrongOptionType = (name, expectedType, actualType) =>\n  'Config option \"' + name + '\" should be of type ' + expectedType + ', got ' + actualType + ', using default value';\n\nexport const wrongOptionTypeBoolean = (name, actualType) =>\n  'Config option \"' + name + '\" should be a boolean, got ' + actualType + ', converting to boolean';\n\nexport const optionBelowMinimum = (name, value, minimum) =>\n  'Config option \"' + name + '\" was set to ' + value + ', changing to minimum value of ' + minimum;\n\nexport const debugPolling = function(url) {\n  return 'polling for feature flags at ' + url;\n};\n\nexport const debugStreamPing = function() {\n  return 'received ping message from stream';\n};\n\nexport const debugStreamPut = function() {\n  return 'received streaming update for all flags';\n};\n\nexport const debugStreamPatch = function(key) {\n  return 'received streaming update for flag \"' + key + '\"';\n};\n\nexport const debugStreamPatchIgnored = function(key) {\n  return 'received streaming update for flag \"' + key + '\" but ignored due to version check';\n};\n\nexport const debugStreamDelete = function(key) {\n  return 'received streaming deletion for flag \"' + key + '\"';\n};\n\nexport const debugStreamDeleteIgnored = function(key) {\n  return 'received streaming deletion for flag \"' + key + '\" but ignored due to version check';\n};\n\nexport const debugEnqueueingEvent = function(kind) {\n  return 'enqueueing \"' + kind + '\" event';\n};\n\nexport const debugPostingEvents = function(count) {\n  return 'sending ' + count + ' events';\n};\n\nexport const debugPostingDiagnosticEvent = function(event) {\n  return 'sending diagnostic event (' + event.kind + ')';\n};\n\nexport const invalidTagValue = name => `Config option \"${name}\" must only contain letters, numbers, ., _ or -.`;\n","import * as errors from './errors';\nimport { validateLogger } from './loggers';\nimport * as messages from './messages';\nimport * as utils from './utils';\n\n// baseOptionDefs should contain an entry for each supported configuration option in the common package.\n// Each entry can have three properties:\n// - \"default\": the default value if any\n// - \"type\": a type constraint used if the type can't be inferred from the default value). The allowable\n//   values are \"boolean\", \"string\", \"number\", \"array\", \"object\", \"function\", or several of these OR'd\n//   together with \"|\" (\"function|object\").\n// - \"minimum\": minimum value if any for numeric properties\n//\n// The extraOptionDefs parameter to validate() uses the same format.\nexport const baseOptionDefs = {\n  baseUrl: { default: 'https://app.launchdarkly.com' },\n  streamUrl: { default: 'https://clientstream.launchdarkly.com' },\n  eventsUrl: { default: 'https://events.launchdarkly.com' },\n  sendEvents: { default: true },\n  streaming: { type: 'boolean' }, // default for this is undefined, which is different from false\n  sendLDHeaders: { default: true },\n  requestHeaderTransform: { type: 'function' },\n  inlineUsersInEvents: { default: false },\n  allowFrequentDuplicateEvents: { default: false },\n  sendEventsOnlyForVariation: { default: false },\n  useReport: { default: false },\n  evaluationReasons: { default: false },\n  eventCapacity: { default: 100, minimum: 1 },\n  flushInterval: { default: 2000, minimum: 2000 },\n  samplingInterval: { default: 0, minimum: 0 },\n  streamReconnectDelay: { default: 1000, minimum: 0 },\n  allAttributesPrivate: { default: false },\n  privateAttributeNames: { default: [] },\n  bootstrap: { type: 'string|object' },\n  diagnosticRecordingInterval: { default: 900000, minimum: 2000 },\n  diagnosticOptOut: { default: false },\n  wrapperName: { type: 'string' },\n  wrapperVersion: { type: 'string' },\n  stateProvider: { type: 'object' }, // not a public option, used internally\n  autoAliasingOptOut: { default: false },\n  application: { validator: applicationConfigValidator },\n};\n\n/**\n * Expression to validate characters that are allowed in tag keys and values.\n */\nconst allowedTagCharacters = /^(\\w|\\.|-)+$/;\n\n/**\n * Verify that a value meets the requirements for a tag value.\n * @param {Object} config\n * @param {string} tagValue\n */\nfunction validateTagValue(name, config, tagValue, logger) {\n  if (typeof tagValue !== 'string' || !tagValue.match(allowedTagCharacters)) {\n    logger.warn(messages.invalidTagValue(name));\n    return undefined;\n  }\n  return tagValue;\n}\n\nfunction applicationConfigValidator(name, config, value, logger) {\n  const validated = {};\n  if (value.id) {\n    validated.id = validateTagValue(`${name}.id`, config, value.id, logger);\n  }\n  if (value.version) {\n    validated.version = validateTagValue(`${name}.version`, config, value.version, logger);\n  }\n  return validated;\n}\n\nexport function validate(options, emitter, extraOptionDefs, logger) {\n  const optionDefs = utils.extend({ logger: { default: logger } }, baseOptionDefs, extraOptionDefs);\n\n  const deprecatedOptions = {\n    // eslint-disable-next-line camelcase\n    all_attributes_private: 'allAttributesPrivate',\n    // eslint-disable-next-line camelcase\n    private_attribute_names: 'privateAttributeNames',\n    samplingInterval: null,\n  };\n\n  function checkDeprecatedOptions(config) {\n    const opts = config;\n    Object.keys(deprecatedOptions).forEach(oldName => {\n      if (opts[oldName] !== undefined) {\n        const newName = deprecatedOptions[oldName];\n        logger && logger.warn(messages.deprecated(oldName, newName));\n        if (newName) {\n          if (opts[newName] === undefined) {\n            opts[newName] = opts[oldName];\n          }\n          delete opts[oldName];\n        }\n      }\n    });\n  }\n\n  function applyDefaults(config) {\n    // This works differently from utils.extend() in that it *will not* override a default value\n    // if the provided value is explicitly set to null. This provides backward compatibility\n    // since in the past we only used the provided values if they were truthy.\n    const ret = utils.extend({}, config);\n    Object.keys(optionDefs).forEach(name => {\n      if (ret[name] === undefined || ret[name] === null) {\n        ret[name] = optionDefs[name] && optionDefs[name].default;\n      }\n    });\n    return ret;\n  }\n\n  function validateTypesAndNames(config) {\n    const ret = utils.extend({}, config);\n    const typeDescForValue = value => {\n      if (value === null) {\n        return 'any';\n      }\n      if (value === undefined) {\n        return undefined;\n      }\n      if (Array.isArray(value)) {\n        return 'array';\n      }\n      const t = typeof value;\n      if (t === 'boolean' || t === 'string' || t === 'number' || t === 'function') {\n        return t;\n      }\n      return 'object';\n    };\n    Object.keys(config).forEach(name => {\n      const value = config[name];\n      if (value !== null && value !== undefined) {\n        const optionDef = optionDefs[name];\n        if (optionDef === undefined) {\n          reportArgumentError(messages.unknownOption(name));\n        } else {\n          const expectedType = optionDef.type || typeDescForValue(optionDef.default);\n          const validator = optionDef.validator;\n          if (validator) {\n            const validated = validator(name, config, config[name], logger);\n            if (validated !== undefined) {\n              ret[name] = validated;\n            } else {\n              delete ret[name];\n            }\n          } else if (expectedType !== 'any') {\n            const allowedTypes = expectedType.split('|');\n            const actualType = typeDescForValue(value);\n            if (allowedTypes.indexOf(actualType) < 0) {\n              if (expectedType === 'boolean') {\n                ret[name] = !!value;\n                reportArgumentError(messages.wrongOptionTypeBoolean(name, actualType));\n              } else {\n                reportArgumentError(messages.wrongOptionType(name, expectedType, actualType));\n                ret[name] = optionDef.default;\n              }\n            } else {\n              if (actualType === 'number' && optionDef.minimum !== undefined && value < optionDef.minimum) {\n                reportArgumentError(messages.optionBelowMinimum(name, value, optionDef.minimum));\n                ret[name] = optionDef.minimum;\n              }\n            }\n          }\n        }\n      }\n    });\n    return ret;\n  }\n\n  function reportArgumentError(message) {\n    utils.onNextTick(() => {\n      emitter && emitter.maybeReportError(new errors.LDInvalidArgumentError(message));\n    });\n  }\n\n  let config = utils.extend({}, options || {});\n\n  checkDeprecatedOptions(config);\n\n  config = applyDefaults(config);\n  config = validateTypesAndNames(config);\n  validateLogger(config.logger);\n\n  return config;\n}\n\n/**\n * Get tags for the specified configuration.\n *\n * If any additional tags are added to the configuration, then the tags from\n * this method should be extended with those.\n * @param {Object} config The already valiated configuration.\n * @returns {Object} The tag configuration.\n */\nexport function getTags(config) {\n  const tags = {};\n  if (config) {\n    if (config.application && config.application.id !== undefined && config.application.id !== null) {\n      tags['application-id'] = [config.application.id];\n    }\n    if (config.application && config.application.version !== undefined && config.application.id !== null) {\n      tags['application-version'] = [config.application.version];\n    }\n  }\n\n  return tags;\n}\n","import { getLDUserAgentString } from './utils';\nimport { getTags } from './configuration';\n\nexport function getLDHeaders(platform, options) {\n  if (options && !options.sendLDHeaders) {\n    return {};\n  }\n  const h = {\n    'X-LaunchDarkly-User-Agent': getLDUserAgentString(platform),\n  };\n  if (options && options.wrapperName) {\n    h['X-LaunchDarkly-Wrapper'] = options.wrapperVersion\n      ? options.wrapperName + '/' + options.wrapperVersion\n      : options.wrapperName;\n  }\n  const tags = getTags(options);\n  const tagKeys = Object.keys(tags);\n  if (tagKeys.length) {\n    h['x-launchdarkly-tags'] = tagKeys\n      .sort()\n      .flatMap(\n        key => (Array.isArray(tags[key]) ? tags[key].sort().map(value => `${key}/${value}`) : [`${key}/${tags[key]}`])\n      )\n      .join(' ');\n  }\n  return h;\n}\n\nexport function transformHeaders(headers, options) {\n  if (!options || !options.requestHeaderTransform) {\n    return headers;\n  }\n  return options.requestHeaderTransform({ ...headers });\n}\n","import * as errors from './errors';\nimport * as utils from './utils';\nimport uuidv1 from 'uuid/v1';\nimport { getLDHeaders, transformHeaders } from './headers';\n\nconst MAX_URL_LENGTH = 2000;\n\nexport default function EventSender(platform, environmentId, options) {\n  const imageUrlPath = '/a/' + environmentId + '.gif';\n  const baseHeaders = utils.extend({ 'Content-Type': 'application/json' }, getLDHeaders(platform, options));\n  const httpFallbackPing = platform.httpFallbackPing; // this will be set for us if we're in the browser SDK\n  const sender = {};\n\n  function getResponseInfo(result) {\n    const ret = { status: result.status };\n    const dateStr = result.header('date');\n    if (dateStr) {\n      const time = Date.parse(dateStr);\n      if (time) {\n        ret.serverTime = time;\n      }\n    }\n    return ret;\n  }\n\n  sender.sendChunk = (events, url, isDiagnostic, usePost) => {\n    const jsonBody = JSON.stringify(events);\n    const payloadId = isDiagnostic ? null : uuidv1();\n\n    function doPostRequest(canRetry) {\n      const headers = isDiagnostic\n        ? baseHeaders\n        : utils.extend({}, baseHeaders, {\n            'X-LaunchDarkly-Event-Schema': '3',\n            'X-LaunchDarkly-Payload-ID': payloadId,\n          });\n      return platform\n        .httpRequest('POST', url, transformHeaders(headers, options), jsonBody)\n        .promise.then(result => {\n          if (!result) {\n            // This was a response from a fire-and-forget request, so we won't have a status.\n            return;\n          }\n          if (result.status >= 400 && errors.isHttpErrorRecoverable(result.status) && canRetry) {\n            return doPostRequest(false);\n          } else {\n            return getResponseInfo(result);\n          }\n        })\n        .catch(() => {\n          if (canRetry) {\n            return doPostRequest(false);\n          }\n          return Promise.reject();\n        });\n    }\n\n    if (usePost) {\n      return doPostRequest(true).catch(() => {});\n    } else {\n      httpFallbackPing && httpFallbackPing(url + imageUrlPath + '?d=' + utils.base64URLEncode(jsonBody));\n      return Promise.resolve(); // we don't wait for this request to complete, it's just a one-way ping\n    }\n  };\n\n  sender.sendEvents = function(events, url, isDiagnostic) {\n    if (!platform.httpRequest) {\n      return Promise.resolve();\n    }\n    const canPost = platform.httpAllowsPost();\n    let chunks;\n    if (canPost) {\n      // no need to break up events into chunks if we can send a POST\n      chunks = [events];\n    } else {\n      chunks = utils.chunkUserEventsForUrl(MAX_URL_LENGTH - url.length, events);\n    }\n    const results = [];\n    for (let i = 0; i < chunks.length; i++) {\n      results.push(sender.sendChunk(chunks[i], url, isDiagnostic, canPost));\n    }\n    return Promise.all(results);\n  };\n\n  return sender;\n}\n","export default function EventSummarizer() {\n  const es = {};\n\n  let startDate = 0,\n    endDate = 0,\n    counters = {};\n\n  es.summarizeEvent = function(event) {\n    if (event.kind === 'feature') {\n      const counterKey =\n        event.key +\n        ':' +\n        (event.variation !== null && event.variation !== undefined ? event.variation : '') +\n        ':' +\n        (event.version !== null && event.version !== undefined ? event.version : '');\n      const counterVal = counters[counterKey];\n      if (counterVal) {\n        counterVal.count = counterVal.count + 1;\n      } else {\n        counters[counterKey] = {\n          count: 1,\n          key: event.key,\n          variation: event.variation,\n          version: event.version,\n          value: event.value,\n          default: event.default,\n        };\n      }\n      if (startDate === 0 || event.creationDate < startDate) {\n        startDate = event.creationDate;\n      }\n      if (event.creationDate > endDate) {\n        endDate = event.creationDate;\n      }\n    }\n  };\n\n  es.getSummary = function() {\n    const flagsOut = {};\n    let empty = true;\n    for (const i in counters) {\n      const c = counters[i];\n      let flag = flagsOut[c.key];\n      if (!flag) {\n        flag = {\n          default: c.default,\n          counters: [],\n        };\n        flagsOut[c.key] = flag;\n      }\n      const counterOut = {\n        value: c.value,\n        count: c.count,\n      };\n      if (c.variation !== undefined && c.variation !== null) {\n        counterOut.variation = c.variation;\n      }\n      if (c.version) {\n        counterOut.version = c.version;\n      } else {\n        counterOut.unknown = true;\n      }\n      flag.counters.push(counterOut);\n      empty = false;\n    }\n    return empty\n      ? null\n      : {\n          startDate,\n          endDate,\n          features: flagsOut,\n        };\n  };\n\n  es.clearSummary = function() {\n    startDate = 0;\n    endDate = 0;\n    counters = {};\n  };\n\n  return es;\n}\n","import * as utils from './utils';\n\n/**\n * The UserFilter object transforms user objects into objects suitable to be sent as JSON to\n * the server, hiding any private user attributes.\n *\n * @param {Object} the LaunchDarkly client configuration object\n **/\nexport default function UserFilter(config) {\n  const filter = {};\n  const allAttributesPrivate = config.allAttributesPrivate;\n  const privateAttributeNames = config.privateAttributeNames || [];\n  const ignoreAttrs = { key: true, custom: true, anonymous: true };\n  const allowedTopLevelAttrs = {\n    key: true,\n    secondary: true,\n    ip: true,\n    country: true,\n    email: true,\n    firstName: true,\n    lastName: true,\n    avatar: true,\n    name: true,\n    anonymous: true,\n    custom: true,\n  };\n\n  filter.filterUser = function(user) {\n    if (!user) {\n      return null;\n    }\n    const userPrivateAttrs = user.privateAttributeNames || [];\n\n    const isPrivateAttr = function(name) {\n      return (\n        !ignoreAttrs[name] &&\n        (allAttributesPrivate || userPrivateAttrs.indexOf(name) !== -1 || privateAttributeNames.indexOf(name) !== -1)\n      );\n    };\n    const filterAttrs = function(props, isAttributeAllowed) {\n      return Object.keys(props).reduce(\n        (acc, name) => {\n          const ret = acc;\n          if (isAttributeAllowed(name)) {\n            if (isPrivateAttr(name)) {\n              // add to hidden list\n              ret[1][name] = true;\n            } else {\n              ret[0][name] = props[name];\n            }\n          }\n          return ret;\n        },\n        [{}, {}]\n      );\n    };\n    const result = filterAttrs(user, key => allowedTopLevelAttrs[key]);\n    const filteredProps = result[0];\n    let removedAttrs = result[1];\n    if (user.custom) {\n      const customResult = filterAttrs(user.custom, () => true);\n      filteredProps.custom = customResult[0];\n      removedAttrs = utils.extend({}, removedAttrs, customResult[1]);\n    }\n    const removedAttrNames = Object.keys(removedAttrs);\n    if (removedAttrNames.length) {\n      removedAttrNames.sort();\n      filteredProps.privateAttrs = removedAttrNames;\n    }\n    return filteredProps;\n  };\n  return filter;\n}\n","export default function EventEmitter(logger) {\n  const emitter = {};\n  const events = {};\n\n  const listeningTo = event => !!events[event];\n\n  emitter.on = function(event, handler, context) {\n    events[event] = events[event] || [];\n    events[event] = events[event].concat({\n      handler: handler,\n      context: context,\n    });\n  };\n\n  emitter.off = function(event, handler, context) {\n    if (!events[event]) {\n      return;\n    }\n    for (let i = 0; i < events[event].length; i++) {\n      if (events[event][i].handler === handler && events[event][i].context === context) {\n        events[event] = events[event].slice(0, i).concat(events[event].slice(i + 1));\n      }\n    }\n  };\n\n  emitter.emit = function(event) {\n    if (!events[event]) {\n      return;\n    }\n    // Copy the list of handlers before iterating, in case any handler adds or removes another handler.\n    // Any such changes should not affect what we do here-- we want to notify every handler that existed\n    // at the moment that the event was fired.\n    const copiedHandlers = events[event].slice(0);\n    for (let i = 0; i < copiedHandlers.length; i++) {\n      copiedHandlers[i].handler.apply(copiedHandlers[i].context, Array.prototype.slice.call(arguments, 1));\n    }\n  };\n\n  emitter.getEvents = function() {\n    return Object.keys(events);\n  };\n\n  emitter.getEventListenerCount = function(event) {\n    return events[event] ? events[event].length : 0;\n  };\n\n  emitter.maybeReportError = function(error) {\n    if (!error) {\n      return;\n    }\n    if (listeningTo('error')) {\n      this.emit('error', error);\n    } else {\n      (logger || console).error(error.message);\n    }\n  };\n  return emitter;\n}\n","// This file provides an abstraction of the client's startup state.\n//\n// Startup can either succeed or fail exactly once; calling signalSuccess() or signalFailure()\n// after that point has no effect.\n//\n// On success, we fire both an \"initialized\" event and a \"ready\" event. Both the waitForInitialization()\n// promise and the waitUntilReady() promise are resolved in this case.\n//\n// On failure, we fire both a \"failed\" event (with the error as a parameter) and a \"ready\" event.\n// The waitForInitialization() promise is rejected, but the waitUntilReady() promise is resolved.\n//\n// To complicate things, we must *not* create the waitForInitialization() promise unless it is\n// requested, because otherwise failures would cause an *unhandled* rejection which can be a\n// serious problem in some environments. So we use a somewhat roundabout system for tracking the\n// initialization state and lazily creating this promise.\n\nconst readyEvent = 'ready',\n  successEvent = 'initialized',\n  failureEvent = 'failed';\n\nfunction InitializationStateTracker(eventEmitter) {\n  let succeeded = false,\n    failed = false,\n    failureValue = null,\n    initializationPromise = null;\n\n  const readyPromise = new Promise(resolve => {\n    const onReady = () => {\n      eventEmitter.off(readyEvent, onReady); // we can't use \"once\" because it's not available on some JS platforms\n      resolve();\n    };\n    eventEmitter.on(readyEvent, onReady);\n  }).catch(() => {}); // this Promise should never be rejected, but the catch handler is a safety measure\n\n  return {\n    getInitializationPromise: () => {\n      if (initializationPromise) {\n        return initializationPromise;\n      }\n      if (succeeded) {\n        return Promise.resolve();\n      }\n      if (failed) {\n        return Promise.reject(failureValue);\n      }\n      initializationPromise = new Promise((resolve, reject) => {\n        const onSuccess = () => {\n          eventEmitter.off(successEvent, onSuccess);\n          resolve();\n        };\n        const onFailure = err => {\n          eventEmitter.off(failureEvent, onFailure);\n          reject(err);\n        };\n        eventEmitter.on(successEvent, onSuccess);\n        eventEmitter.on(failureEvent, onFailure);\n      });\n      return initializationPromise;\n    },\n\n    getReadyPromise: () => readyPromise,\n\n    signalSuccess: () => {\n      if (!succeeded && !failed) {\n        succeeded = true;\n        eventEmitter.emit(successEvent);\n        eventEmitter.emit(readyEvent);\n      }\n    },\n\n    signalFailure: err => {\n      if (!succeeded && !failed) {\n        failed = true;\n        failureValue = err;\n        eventEmitter.emit(failureEvent, err);\n        eventEmitter.emit(readyEvent);\n      }\n      eventEmitter.maybeReportError(err); // the \"error\" event can be emitted more than once, unlike the others\n    },\n  };\n}\n\nmodule.exports = InitializationStateTracker;\n","import * as utils from './utils';\n\nexport default function PersistentFlagStore(storage, environment, hash, ident) {\n  const store = {};\n\n  function getFlagsKey() {\n    let key = '';\n    const user = ident.getUser();\n    if (user) {\n      key = hash || utils.btoa(JSON.stringify(user));\n    }\n    return 'ld:' + environment + ':' + key;\n  }\n\n  // Returns a Promise which will be resolved with a parsed JSON value if a stored value was available,\n  // or resolved with null if there was no value or if storage was not available.\n  store.loadFlags = () =>\n    storage.get(getFlagsKey()).then(dataStr => {\n      if (dataStr === null || dataStr === undefined) {\n        return null;\n      }\n      try {\n        let data = JSON.parse(dataStr);\n        if (data) {\n          const schema = data.$schema;\n          if (schema === undefined || schema < 1) {\n            data = utils.transformValuesToVersionedValues(data);\n          } else {\n            delete data['$schema'];\n          }\n        }\n        return data;\n      } catch (ex) {\n        return store.clearFlags().then(() => null);\n      }\n    });\n\n  // Resolves with true if successful, or false if storage is unavailable. Never rejects.\n  store.saveFlags = flags => {\n    const data = utils.extend({}, flags, { $schema: 1 });\n    return storage.set(getFlagsKey(), JSON.stringify(data));\n  };\n\n  // Resolves with true if successful, or false if storage is unavailable. Never rejects.\n  store.clearFlags = () => storage.clear(getFlagsKey());\n\n  return store;\n}\n","import * as messages from './messages';\nimport { appendUrlPath, base64URLEncode, objectHasOwnProperty } from './utils';\nimport { getLDHeaders, transformHeaders } from './headers';\n\n// The underlying event source implementation is abstracted via the platform object, which should\n// have these three properties:\n// eventSourceFactory(): a function that takes a URL and optional config object and returns an object\n//   with the same methods as the regular HTML5 EventSource object. The properties in the config\n//   object are those supported by the launchdarkly-eventsource package; browser EventSource\n//   implementations don't have any config options.\n// eventSourceIsActive(): a function that takes an EventSource-compatible object and returns true if\n//   it is in an active state (connected or connecting).\n// eventSourceAllowsReport: true if REPORT is supported.\n\n// The read timeout for the stream is a fixed value that is set to be slightly longer than the expected\n// interval between heartbeats from the LaunchDarkly streaming server. If this amount of time elapses\n// with no new data, the connection will be cycled.\nconst streamReadTimeoutMillis = 5 * 60 * 1000; // 5 minutes\n\nexport default function Stream(platform, config, environment, diagnosticsAccumulator) {\n  const baseUrl = config.streamUrl;\n  const logger = config.logger;\n  const stream = {};\n  const evalUrlPrefix = appendUrlPath(baseUrl, '/eval/' + environment);\n  const useReport = config.useReport;\n  const withReasons = config.evaluationReasons;\n  const streamReconnectDelay = config.streamReconnectDelay;\n  const headers = getLDHeaders(platform, config);\n  let firstConnectionErrorLogged = false;\n  let es = null;\n  let reconnectTimeoutReference = null;\n  let connectionAttemptStartTime;\n  let user = null;\n  let hash = null;\n  let handlers = null;\n\n  stream.connect = function(newUser, newHash, newHandlers) {\n    user = newUser;\n    hash = newHash;\n    handlers = {};\n    for (const key in newHandlers || {}) {\n      handlers[key] = function(e) {\n        // Reset the state for logging the first connection error so that the first\n        // connection error following a successful connection will once again be logged.\n        // We will decorate *all* handlers to do this to keep this abstraction agnostic\n        // for different stream implementations.\n        firstConnectionErrorLogged = false;\n        logConnectionResult(true);\n        newHandlers[key] && newHandlers[key](e);\n      };\n    }\n    tryConnect();\n  };\n\n  stream.disconnect = function() {\n    clearTimeout(reconnectTimeoutReference);\n    reconnectTimeoutReference = null;\n    closeConnection();\n  };\n\n  stream.isConnected = function() {\n    return !!(es && platform.eventSourceIsActive && platform.eventSourceIsActive(es));\n  };\n\n  function handleError(err) {\n    if (!firstConnectionErrorLogged) {\n      logger.warn(messages.streamError(err, streamReconnectDelay));\n      firstConnectionErrorLogged = true;\n    }\n    logConnectionResult(false);\n    closeConnection();\n    tryConnect(streamReconnectDelay);\n  }\n\n  function tryConnect(delay) {\n    if (!reconnectTimeoutReference) {\n      if (delay) {\n        reconnectTimeoutReference = setTimeout(openConnection, delay);\n      } else {\n        openConnection();\n      }\n    }\n  }\n\n  function openConnection() {\n    reconnectTimeoutReference = null;\n    let url;\n    let query = '';\n    const options = { headers, readTimeoutMillis: streamReadTimeoutMillis };\n    if (platform.eventSourceFactory) {\n      if (hash !== null && hash !== undefined) {\n        query = 'h=' + hash;\n      }\n      if (useReport) {\n        if (platform.eventSourceAllowsReport) {\n          url = evalUrlPrefix;\n          options.method = 'REPORT';\n          options.headers['Content-Type'] = 'application/json';\n          options.body = JSON.stringify(user);\n        } else {\n          // if we can't do REPORT, fall back to the old ping-based stream\n          url = appendUrlPath(baseUrl, '/ping/' + environment);\n          query = '';\n        }\n      } else {\n        url = evalUrlPrefix + '/' + base64URLEncode(JSON.stringify(user));\n      }\n      options.headers = transformHeaders(options.headers, config);\n      if (withReasons) {\n        query = query + (query ? '&' : '') + 'withReasons=true';\n      }\n      url = url + (query ? '?' : '') + query;\n\n      closeConnection();\n      logger.info(messages.streamConnecting(url));\n      logConnectionStarted();\n\n      es = platform.eventSourceFactory(url, options);\n      for (const key in handlers) {\n        if (objectHasOwnProperty(handlers, key)) {\n          es.addEventListener(key, handlers[key]);\n        }\n      }\n\n      es.onerror = handleError;\n    }\n  }\n\n  function closeConnection() {\n    if (es) {\n      logger.info(messages.streamClosing());\n      es.close();\n      es = null;\n    }\n  }\n\n  function logConnectionStarted() {\n    connectionAttemptStartTime = new Date().getTime();\n  }\n\n  function logConnectionResult(success) {\n    if (connectionAttemptStartTime && diagnosticsAccumulator) {\n      diagnosticsAccumulator.recordStreamInit(\n        connectionAttemptStartTime,\n        !success,\n        new Date().getTime() - connectionAttemptStartTime\n      );\n    }\n    connectionAttemptStartTime = null;\n  }\n\n  return stream;\n}\n","import * as utils from './utils';\nimport * as errors from './errors';\nimport * as messages from './messages';\nimport promiseCoalescer from './promiseCoalescer';\nimport { transformHeaders, getLDHeaders } from './headers';\n\nconst jsonContentType = 'application/json';\n\nfunction getResponseError(result) {\n  if (result.status === 404) {\n    return new errors.LDInvalidEnvironmentIdError(messages.environmentNotFound());\n  } else {\n    return new errors.LDFlagFetchError(messages.errorFetchingFlags(result.statusText || String(result.status)));\n  }\n}\n\nexport default function Requestor(platform, options, environment) {\n  const baseUrl = options.baseUrl;\n  const useReport = options.useReport;\n  const withReasons = options.evaluationReasons;\n  const logger = options.logger;\n\n  const requestor = {};\n\n  const activeRequests = {}; // map of URLs to promiseCoalescers\n\n  function fetchJSON(endpoint, body) {\n    if (!platform.httpRequest) {\n      return new Promise((resolve, reject) => {\n        reject(new errors.LDFlagFetchError(messages.httpUnavailable()));\n      });\n    }\n\n    const method = body ? 'REPORT' : 'GET';\n    const headers = getLDHeaders(platform, options);\n    if (body) {\n      headers['Content-Type'] = jsonContentType;\n    }\n\n    let coalescer = activeRequests[endpoint];\n    if (!coalescer) {\n      coalescer = promiseCoalescer(() => {\n        // this will be called once there are no more active requests for the same endpoint\n        delete activeRequests[endpoint];\n      });\n      activeRequests[endpoint] = coalescer;\n    }\n\n    const req = platform.httpRequest(method, endpoint, transformHeaders(headers, options), body);\n    const p = req.promise.then(\n      result => {\n        if (result.status === 200) {\n          // We're using substring here because using startsWith would require a polyfill in IE.\n          if (\n            result.header('content-type') &&\n            result.header('content-type').substring(0, jsonContentType.length) === jsonContentType\n          ) {\n            return JSON.parse(result.body);\n          } else {\n            const message = messages.invalidContentType(result.header('content-type') || '');\n            return Promise.reject(new errors.LDFlagFetchError(message));\n          }\n        } else {\n          return Promise.reject(getResponseError(result));\n        }\n      },\n      e => Promise.reject(new errors.LDFlagFetchError(messages.networkError(e)))\n    );\n    coalescer.addPromise(p, () => {\n      // this will be called if another request for the same endpoint supersedes this one\n      req.cancel && req.cancel();\n    });\n    return coalescer.resultPromise;\n  }\n\n  // Performs a GET request to an arbitrary path under baseUrl. Returns a Promise which will resolve\n  // with the parsed JSON response, or will be rejected if the request failed.\n  requestor.fetchJSON = function(path) {\n    return fetchJSON(utils.appendUrlPath(baseUrl, path), null);\n  };\n\n  // Requests the current state of all flags for the given user from LaunchDarkly. Returns a Promise\n  // which will resolve with the parsed JSON response, or will be rejected if the request failed.\n  requestor.fetchFlagSettings = function(user, hash) {\n    let data;\n    let endpoint;\n    let query = '';\n    let body;\n\n    if (useReport) {\n      endpoint = [baseUrl, '/sdk/evalx/', environment, '/user'].join('');\n      body = JSON.stringify(user);\n    } else {\n      data = utils.base64URLEncode(JSON.stringify(user));\n      endpoint = [baseUrl, '/sdk/evalx/', environment, '/users/', data].join('');\n    }\n    if (hash) {\n      query = 'h=' + hash;\n    }\n    if (withReasons) {\n      query = query + (query ? '&' : '') + 'withReasons=true';\n    }\n    endpoint = endpoint + (query ? '?' : '') + query;\n    logger.debug(messages.debugPolling(endpoint));\n\n    return fetchJSON(endpoint, body);\n  };\n\n  return requestor;\n}\n","// This function allows a series of Promises to be coalesced such that only the most recently\n// added one actually matters. For instance, if several HTTP requests are made to the same\n// endpoint and we want to ensure that whoever made each one always gets the latest data, each\n// can be passed to addPromise (on the same coalescer) and each caller can wait on the\n// coalescer.resultPromise; all three will then receive the result (or error) from the *last*\n// request, and the results of the first two will be discarded.\n//\n// The cancelFn callback, if present, will be called whenever an existing promise is being\n// discarded. This can be used for instance to abort an HTTP request that's now obsolete.\n//\n// The finallyFn callback, if present, is called on completion of the whole thing. This is\n// different from calling coalescer.resultPromise.finally() because it is executed before any\n// other handlers. Its purpose is to tell the caller that this coalescer should no longer be used.\n\nexport default function promiseCoalescer(finallyFn) {\n  let currentPromise;\n  let currentCancelFn;\n  let finalResolve;\n  let finalReject;\n\n  const coalescer = {};\n\n  coalescer.addPromise = (p, cancelFn) => {\n    currentPromise = p;\n    currentCancelFn && currentCancelFn();\n    currentCancelFn = cancelFn;\n\n    p.then(\n      result => {\n        if (currentPromise === p) {\n          finalResolve(result);\n          finallyFn && finallyFn();\n        }\n      },\n      error => {\n        if (currentPromise === p) {\n          finalReject(error);\n          finallyFn && finallyFn();\n        }\n      }\n    );\n  };\n\n  coalescer.resultPromise = new Promise((resolve, reject) => {\n    finalResolve = resolve;\n    finalReject = reject;\n  });\n\n  return coalescer;\n}\n","import uuidv1 from 'uuid/v1';\n\nimport * as errors from './errors';\nimport * as messages from './messages';\nimport * as utils from './utils';\n\n// Transforms the user object if necessary to make sure it has a valid key.\n// 1. If a key is present, but is not a string, change it to a string.\n// 2. If no key is present, and \"anonymous\" is true, use a UUID as a key. This is cached in local\n// storage if possible.\n// 3. If there is no key (or no user object), return an error.\n\nconst ldUserIdKey = 'ld:$anonUserId';\n\nexport default function UserValidator(persistentStorage) {\n  function getCachedUserId() {\n    return persistentStorage.get(ldUserIdKey);\n  }\n\n  function setCachedUserId(id) {\n    return persistentStorage.set(ldUserIdKey, id);\n  }\n\n  const ret = {};\n\n  // Validates the user, returning a Promise that resolves to the validated user, or rejects if there is an error.\n  ret.validateUser = user => {\n    if (!user) {\n      return Promise.reject(new errors.LDInvalidUserError(messages.userNotSpecified()));\n    }\n\n    const userOut = utils.clone(user);\n    if (userOut.key !== null && userOut.key !== undefined) {\n      userOut.key = userOut.key.toString();\n      return Promise.resolve(userOut);\n    }\n    if (userOut.anonymous) {\n      return getCachedUserId().then(cachedId => {\n        if (cachedId) {\n          userOut.key = cachedId;\n          return userOut;\n        } else {\n          const id = uuidv1();\n          userOut.key = id;\n          return setCachedUserId(id).then(() => userOut);\n        }\n      });\n    } else {\n      return Promise.reject(new errors.LDInvalidUserError(messages.invalidUser()));\n    }\n  };\n\n  return ret;\n}\n","const uuidv1 = require('uuid/v1');\n// Note that in the diagnostic events spec, these IDs are to be generated with UUID v4. However,\n// in JS we were already using v1 for unique user keys, so to avoid bringing in two packages we\n// will use v1 here as well.\n\nconst { baseOptionDefs } = require('./configuration');\nconst messages = require('./messages');\nconst { appendUrlPath } = require('./utils');\n\nfunction DiagnosticId(sdkKey) {\n  const ret = {\n    diagnosticId: uuidv1(),\n  };\n  if (sdkKey) {\n    ret.sdkKeySuffix = sdkKey.length > 6 ? sdkKey.substring(sdkKey.length - 6) : sdkKey;\n  }\n  return ret;\n}\n\n// A stateful object holding statistics that will go into diagnostic events.\n\nfunction DiagnosticsAccumulator(startTime) {\n  let dataSinceDate, droppedEvents, eventsInLastBatch, streamInits;\n\n  function reset(time) {\n    dataSinceDate = time;\n    droppedEvents = 0;\n    eventsInLastBatch = 0;\n    streamInits = [];\n  }\n\n  reset(startTime);\n\n  return {\n    getProps: () => ({\n      dataSinceDate,\n      droppedEvents,\n      eventsInLastBatch,\n      streamInits,\n      // omit deduplicatedUsers for the JS SDKs because they don't deduplicate users\n    }),\n    setProps: props => {\n      dataSinceDate = props.dataSinceDate;\n      droppedEvents = props.droppedEvents || 0;\n      eventsInLastBatch = props.eventsInLastBatch || 0;\n      streamInits = props.streamInits || [];\n    },\n    incrementDroppedEvents: () => {\n      droppedEvents++;\n    },\n    setEventsInLastBatch: n => {\n      eventsInLastBatch = n;\n    },\n    recordStreamInit: (timestamp, failed, durationMillis) => {\n      const info = { timestamp, failed, durationMillis };\n      streamInits.push(info);\n    },\n    reset,\n  };\n}\n\n// An object that maintains information that will go into diagnostic events, and knows how to format\n// those events. It is instantiated by the SDK client, and shared with the event processor.\n//\n// The JS-based SDKs have two modes for diagnostic events. By default, the behavior is basically the\n// same as the server-side SDKs: a \"diagnostic-init\" event is sent on startup, and then \"diagnostic\"\n// events with operating statistics are sent periodically. However, in a browser environment this is\n// undesirable because the page may be reloaded frequently. In that case, setting the property\n// \"platform.diagnosticUseCombinedEvent\" to true enables an alternate mode in which a combination of\n// both kinds of event is sent at intervals, relative to the last time this was done (if any) which\n// is cached in local storage.\n\nfunction DiagnosticsManager(\n  platform,\n  persistentStorage,\n  accumulator,\n  eventSender,\n  environmentId,\n  config,\n  diagnosticId\n) {\n  const combinedMode = !!platform.diagnosticUseCombinedEvent;\n  const localStorageKey = 'ld:' + environmentId + ':$diagnostics';\n  const diagnosticEventsUrl = appendUrlPath(config.eventsUrl, '/events/diagnostic/' + environmentId);\n  const periodicInterval = config.diagnosticRecordingInterval;\n  const acc = accumulator;\n  const initialEventSamplingInterval = 4; // used only in combined mode - see start()\n  let streamingEnabled = !!config.streaming;\n  let eventSentTime;\n  let periodicTimer;\n  const manager = {};\n\n  function makeInitProperties() {\n    return {\n      sdk: makeSdkData(),\n      configuration: makeConfigData(),\n      platform: platform.diagnosticPlatformData,\n    };\n  }\n\n  // Send a diagnostic event and do not wait for completion.\n  function sendDiagnosticEvent(event) {\n    config.logger && config.logger.debug(messages.debugPostingDiagnosticEvent(event));\n    eventSender\n      .sendEvents(event, diagnosticEventsUrl, true)\n      .then(() => undefined)\n      .catch(() => undefined);\n  }\n\n  function loadProperties(callback) {\n    if (!persistentStorage.isEnabled()) {\n      return callback(false); // false indicates that local storage is not available\n    }\n    persistentStorage\n      .get(localStorageKey)\n      .then(data => {\n        if (data) {\n          try {\n            const props = JSON.parse(data);\n            acc.setProps(props);\n            eventSentTime = props.dataSinceDate;\n          } catch (e) {\n            // disregard malformed cached data\n          }\n        }\n        callback(true);\n      })\n      .catch(() => {\n        callback(false);\n      });\n  }\n\n  function saveProperties() {\n    if (persistentStorage.isEnabled()) {\n      const props = { ...acc.getProps() };\n      persistentStorage.set(localStorageKey, JSON.stringify(props));\n    }\n  }\n\n  // Creates the initial event that is sent by the event processor when the SDK starts up. This will not\n  // be repeated during the lifetime of the SDK client. In combined mode, we don't send this.\n  function createInitEvent() {\n    return {\n      kind: 'diagnostic-init',\n      id: diagnosticId,\n      creationDate: acc.getProps().dataSinceDate,\n      ...makeInitProperties(),\n    };\n  }\n\n  // Creates a periodic event containing time-dependent stats, and resets the state of the manager with\n  // regard to those stats. In combined mode (browser SDK) this also contains the configuration data.\n  function createPeriodicEventAndReset() {\n    const currentTime = new Date().getTime();\n    let ret = {\n      kind: combinedMode ? 'diagnostic-combined' : 'diagnostic',\n      id: diagnosticId,\n      creationDate: currentTime,\n      ...acc.getProps(),\n    };\n    if (combinedMode) {\n      ret = { ...ret, ...makeInitProperties() };\n    }\n    acc.reset(currentTime);\n    return ret;\n  }\n\n  function sendPeriodicEvent() {\n    sendDiagnosticEvent(createPeriodicEventAndReset());\n    periodicTimer = setTimeout(sendPeriodicEvent, periodicInterval);\n    eventSentTime = new Date().getTime();\n    if (combinedMode) {\n      saveProperties();\n    }\n  }\n\n  function makeSdkData() {\n    const sdkData = { ...platform.diagnosticSdkData };\n    if (config.wrapperName) {\n      sdkData.wrapperName = config.wrapperName;\n    }\n    if (config.wrapperVersion) {\n      sdkData.wrapperVersion = config.wrapperVersion;\n    }\n    return sdkData;\n  }\n\n  function makeConfigData() {\n    const configData = {\n      customBaseURI: config.baseUrl !== baseOptionDefs.baseUrl.default,\n      customStreamURI: config.streamUrl !== baseOptionDefs.streamUrl.default,\n      customEventsURI: config.eventsUrl !== baseOptionDefs.eventsUrl.default,\n      eventsCapacity: config.eventCapacity,\n      eventsFlushIntervalMillis: config.flushInterval,\n      reconnectTimeMillis: config.streamReconnectDelay,\n      streamingDisabled: !streamingEnabled,\n      allAttributesPrivate: !!config.allAttributesPrivate,\n      inlineUsersInEvents: !!config.inlineUsersInEvents,\n      diagnosticRecordingIntervalMillis: config.diagnosticRecordingInterval,\n      // The following extra properties are only provided by client-side JS SDKs:\n      usingSecureMode: !!config.hash,\n      bootstrapMode: !!config.bootstrap,\n      fetchGoalsDisabled: !config.fetchGoals,\n      allowFrequentDuplicateEvents: !!config.allowFrequentDuplicateEvents,\n      sendEventsOnlyForVariation: !!config.sendEventsOnlyForVariation,\n      autoAliasingOptOut: !!config.autoAliasingOptOut,\n    };\n    // Client-side JS SDKs do not have the following properties which other SDKs have:\n    // connectTimeoutMillis\n    // pollingIntervalMillis\n    // samplingInterval\n    // socketTimeoutMillis\n    // startWaitMillis\n    // userKeysCapacity\n    // userKeysFlushIntervalMillis\n    // usingProxy\n    // usingProxyAuthenticator\n    // usingRelayDaemon\n\n    return configData;\n  }\n\n  // Called when the SDK is starting up. Either send an init event immediately, or, in the alternate\n  // mode, check for cached local storage properties and send an event only if we haven't done so\n  // recently.\n  manager.start = () => {\n    if (combinedMode) {\n      loadProperties(localStorageAvailable => {\n        if (localStorageAvailable) {\n          const nextEventTime = (eventSentTime || 0) + periodicInterval;\n          const timeNow = new Date().getTime();\n          if (timeNow >= nextEventTime) {\n            sendPeriodicEvent();\n          } else {\n            periodicTimer = setTimeout(sendPeriodicEvent, nextEventTime - timeNow);\n          }\n        } else {\n          // We don't have the ability to cache anything in local storage, so we don't know if we\n          // recently sent an event before this page load, but we would still prefer not to send one\n          // on *every* page load. So, as a rough heuristic, we'll decide semi-randomly.\n          if (Math.floor(Math.random() * initialEventSamplingInterval) === 0) {\n            sendPeriodicEvent();\n          } else {\n            periodicTimer = setTimeout(sendPeriodicEvent, periodicInterval);\n          }\n        }\n      });\n    } else {\n      sendDiagnosticEvent(createInitEvent());\n      periodicTimer = setTimeout(sendPeriodicEvent, periodicInterval);\n    }\n  };\n\n  manager.stop = () => {\n    periodicTimer && clearTimeout(periodicTimer);\n  };\n\n  // Called when streaming mode is turned on or off dynamically.\n  manager.setStreaming = enabled => {\n    streamingEnabled = enabled;\n  };\n\n  return manager;\n}\n\nmodule.exports = {\n  DiagnosticId,\n  DiagnosticsAccumulator,\n  DiagnosticsManager,\n};\n","import EventProcessor from './EventProcessor';\nimport EventEmitter from './EventEmitter';\nimport EventSender from './EventSender';\nimport InitializationStateTracker from './InitializationState';\nimport PersistentFlagStore from './PersistentFlagStore';\nimport PersistentStorage from './PersistentStorage';\nimport Stream from './Stream';\nimport Requestor from './Requestor';\nimport Identity from './Identity';\nimport UserValidator from './UserValidator';\nimport * as configuration from './configuration';\nimport * as diagnostics from './diagnosticEvents';\nimport { commonBasicLogger, createConsoleLogger } from './loggers';\nimport * as utils from './utils';\nimport * as errors from './errors';\nimport * as messages from './messages';\n\nconst changeEvent = 'change';\nconst internalChangeEvent = 'internal-change';\n\n// This is called by the per-platform initialize functions to create the base client object that we\n// may also extend with additional behavior. It returns an object with these properties:\n//   client: the actual client object\n//   options: the configuration (after any appropriate defaults have been applied)\n// If we need to give the platform-specific clients access to any internals here, we should add those\n// as properties of the return object, not public properties of the client.\n//\n// For definitions of the API in the platform object, see stubPlatform.js in the test code.\n\nexport function initialize(env, user, specifiedOptions, platform, extraOptionDefs) {\n  const logger = createLogger();\n  const emitter = EventEmitter(logger);\n  const initializationStateTracker = InitializationStateTracker(emitter);\n  const options = configuration.validate(specifiedOptions, emitter, extraOptionDefs, logger);\n  const sendEvents = options.sendEvents;\n  let environment = env;\n  let hash = options.hash;\n\n  const persistentStorage = PersistentStorage(platform.localStorage, logger);\n\n  const eventSender = EventSender(platform, environment, options);\n\n  const diagnosticsEnabled = options.sendEvents && !options.diagnosticOptOut;\n  const diagnosticId = diagnosticsEnabled ? diagnostics.DiagnosticId(environment) : null;\n  const diagnosticsAccumulator = diagnosticsEnabled ? diagnostics.DiagnosticsAccumulator(new Date().getTime()) : null;\n  const diagnosticsManager = diagnosticsEnabled\n    ? diagnostics.DiagnosticsManager(\n        platform,\n        persistentStorage,\n        diagnosticsAccumulator,\n        eventSender,\n        environment,\n        options,\n        diagnosticId\n      )\n    : null;\n\n  const stream = Stream(platform, options, environment, diagnosticsAccumulator);\n\n  const events =\n    options.eventProcessor ||\n    EventProcessor(platform, options, environment, diagnosticsAccumulator, emitter, eventSender);\n\n  const requestor = Requestor(platform, options, environment);\n\n  const seenRequests = {};\n  let flags = {};\n  let useLocalStorage;\n  let streamActive;\n  let streamForcedState = options.streaming;\n  let subscribedToChangeEvents;\n  let inited = false;\n  let closed = false;\n  let firstEvent = true;\n\n  // The \"stateProvider\" object is used in the Electron SDK, to allow one client instance to take partial\n  // control of another. If present, it has the following contract:\n  // - getInitialState() returns the initial client state if it is already available. The state is an\n  //   object whose properties are \"environment\", \"user\", and \"flags\".\n  // - on(\"init\", listener) triggers an event when the initial client state becomes available, passing\n  //   the state object to the listener.\n  // - on(\"update\", listener) triggers an event when flag values change and/or the current user changes.\n  //   The parameter is an object that *may* contain \"user\" and/or \"flags\".\n  // - enqueueEvent(event) accepts an analytics event object and returns true if the stateProvider will\n  //   be responsible for delivering it, or false if we still should deliver it ourselves.\n  const stateProvider = options.stateProvider;\n\n  const ident = Identity(null, onIdentifyChange);\n  const userValidator = UserValidator(persistentStorage);\n  const persistentFlagStore = persistentStorage.isEnabled()\n    ? new PersistentFlagStore(persistentStorage, environment, hash, ident, logger)\n    : null;\n\n  function createLogger() {\n    if (specifiedOptions && specifiedOptions.logger) {\n      return specifiedOptions.logger;\n    }\n    return (extraOptionDefs && extraOptionDefs.logger && extraOptionDefs.logger.default) || createConsoleLogger('warn');\n  }\n\n  function readFlagsFromBootstrap(data) {\n    // If the bootstrap data came from an older server-side SDK, we'll have just a map of keys to values.\n    // Newer SDKs that have an allFlagsState method will provide an extra \"$flagsState\" key that contains\n    // the rest of the metadata we want. We do it this way for backward compatibility with older JS SDKs.\n    const keys = Object.keys(data);\n    const metadataKey = '$flagsState';\n    const validKey = '$valid';\n    const metadata = data[metadataKey];\n    if (!metadata && keys.length) {\n      logger.warn(messages.bootstrapOldFormat());\n    }\n    if (data[validKey] === false) {\n      logger.warn(messages.bootstrapInvalid());\n    }\n    const ret = {};\n    keys.forEach(key => {\n      if (key !== metadataKey && key !== validKey) {\n        let flag = { value: data[key] };\n        if (metadata && metadata[key]) {\n          flag = utils.extend(flag, metadata[key]);\n        } else {\n          flag.version = 0;\n        }\n        ret[key] = flag;\n      }\n    });\n    return ret;\n  }\n\n  function shouldEnqueueEvent() {\n    return sendEvents && !closed && !platform.isDoNotTrack();\n  }\n\n  function enqueueEvent(event) {\n    if (!environment) {\n      // We're in paired mode and haven't been initialized with an environment or user yet\n      return;\n    }\n    if (stateProvider && stateProvider.enqueueEvent && stateProvider.enqueueEvent(event)) {\n      return; // it'll be handled elsewhere\n    }\n    if (event.kind !== 'alias') {\n      if (!event.user) {\n        if (firstEvent) {\n          logger.warn(messages.eventWithoutUser());\n          firstEvent = false;\n        }\n        return;\n      }\n      firstEvent = false;\n    }\n    if (shouldEnqueueEvent()) {\n      logger.debug(messages.debugEnqueueingEvent(event.kind));\n      events.enqueue(event);\n    }\n  }\n\n  function onIdentifyChange(user, previousUser) {\n    sendIdentifyEvent(user);\n    if (!options.autoAliasingOptOut && previousUser && previousUser.anonymous && user && !user.anonymous) {\n      alias(user, previousUser);\n    }\n  }\n\n  function sendIdentifyEvent(user) {\n    if (stateProvider) {\n      // In paired mode, the other client is responsible for sending identify events\n      return;\n    }\n    if (user) {\n      enqueueEvent({\n        kind: 'identify',\n        key: user.key,\n        user: user,\n        creationDate: new Date().getTime(),\n      });\n    }\n  }\n\n  function sendFlagEvent(key, detail, defaultValue, includeReason) {\n    const user = ident.getUser();\n    const now = new Date();\n    const value = detail ? detail.value : null;\n    if (!options.allowFrequentDuplicateEvents) {\n      const cacheKey = JSON.stringify(value) + (user && user.key ? user.key : '') + key; // see below\n      const cached = seenRequests[cacheKey];\n      // cache TTL is five minutes\n      if (cached && now - cached < 300000) {\n        return;\n      }\n      seenRequests[cacheKey] = now;\n    }\n\n    const event = {\n      kind: 'feature',\n      key: key,\n      user: user,\n      value: value,\n      variation: detail ? detail.variationIndex : null,\n      default: defaultValue,\n      creationDate: now.getTime(),\n    };\n    if (user && user.anonymous) {\n      event.contextKind = userContextKind(user);\n    }\n    const flag = flags[key];\n    if (flag) {\n      event.version = flag.flagVersion ? flag.flagVersion : flag.version;\n      event.trackEvents = flag.trackEvents;\n      event.debugEventsUntilDate = flag.debugEventsUntilDate;\n    }\n    if ((includeReason || (flag && flag.trackReason)) && detail) {\n      event.reason = detail.reason;\n    }\n\n    enqueueEvent(event);\n  }\n\n  function identify(user, newHash, onDone) {\n    if (closed) {\n      return utils.wrapPromiseCallback(Promise.resolve({}), onDone);\n    }\n    if (stateProvider) {\n      // We're being controlled by another client instance, so only that instance is allowed to change the user\n      logger.warn(messages.identifyDisabled());\n      return utils.wrapPromiseCallback(Promise.resolve(utils.transformVersionedValuesToValues(flags)), onDone);\n    }\n    const clearFirst = useLocalStorage && persistentFlagStore ? persistentFlagStore.clearFlags() : Promise.resolve();\n    return utils.wrapPromiseCallback(\n      clearFirst\n        .then(() => userValidator.validateUser(user))\n        .then(realUser =>\n          requestor\n            .fetchFlagSettings(realUser, newHash)\n            // the following then() is nested within this one so we can use realUser from the previous closure\n            .then(requestedFlags => {\n              const flagValueMap = utils.transformVersionedValuesToValues(requestedFlags);\n              ident.setUser(realUser);\n              hash = newHash;\n              if (requestedFlags) {\n                return replaceAllFlags(requestedFlags).then(() => flagValueMap);\n              } else {\n                return flagValueMap;\n              }\n            })\n        )\n        .then(flagValueMap => {\n          if (streamActive) {\n            connectStream();\n          }\n          return flagValueMap;\n        })\n        .catch(err => {\n          emitter.maybeReportError(err);\n          return Promise.reject(err);\n        }),\n      onDone\n    );\n  }\n\n  function getUser() {\n    return ident.getUser();\n  }\n\n  function flush(onDone) {\n    return utils.wrapPromiseCallback(sendEvents ? events.flush() : Promise.resolve(), onDone);\n  }\n\n  function variation(key, defaultValue) {\n    return variationDetailInternal(key, defaultValue, true, false).value;\n  }\n\n  function variationDetail(key, defaultValue) {\n    return variationDetailInternal(key, defaultValue, true, true);\n  }\n\n  function variationDetailInternal(key, defaultValue, sendEvent, includeReasonInEvent) {\n    let detail;\n\n    if (flags && utils.objectHasOwnProperty(flags, key) && flags[key] && !flags[key].deleted) {\n      const flag = flags[key];\n      detail = getFlagDetail(flag);\n      if (flag.value === null || flag.value === undefined) {\n        detail.value = defaultValue;\n      }\n    } else {\n      detail = { value: defaultValue, variationIndex: null, reason: { kind: 'ERROR', errorKind: 'FLAG_NOT_FOUND' } };\n    }\n\n    if (sendEvent) {\n      sendFlagEvent(key, detail, defaultValue, includeReasonInEvent);\n    }\n\n    return detail;\n  }\n\n  function getFlagDetail(flag) {\n    return {\n      value: flag.value,\n      variationIndex: flag.variation === undefined ? null : flag.variation,\n      reason: flag.reason || null,\n    };\n    // Note, the logic above ensures that variationIndex and reason will always be null rather than\n    // undefined if we don't have values for them. That's just to avoid subtle errors that depend on\n    // whether an object was JSON-encoded with null properties omitted or not.\n  }\n\n  function allFlags() {\n    const results = {};\n\n    if (!flags) {\n      return results;\n    }\n\n    for (const key in flags) {\n      if (utils.objectHasOwnProperty(flags, key)) {\n        results[key] = variationDetailInternal(key, null, !options.sendEventsOnlyForVariation).value;\n      }\n    }\n\n    return results;\n  }\n\n  function userContextKind(user) {\n    return user.anonymous ? 'anonymousUser' : 'user';\n  }\n\n  function alias(user, previousUser) {\n    if (stateProvider) {\n      // In paired mode, the other client is responsible for sending alias events\n      return;\n    }\n\n    if (!user || !previousUser) {\n      return;\n    }\n\n    enqueueEvent({\n      kind: 'alias',\n      key: user.key,\n      contextKind: userContextKind(user),\n      previousKey: previousUser.key,\n      previousContextKind: userContextKind(previousUser),\n      creationDate: new Date().getTime(),\n    });\n  }\n\n  function track(key, data, metricValue) {\n    if (typeof key !== 'string') {\n      emitter.maybeReportError(new errors.LDInvalidEventKeyError(messages.unknownCustomEventKey(key)));\n      return;\n    }\n\n    // The following logic was used only for the JS browser SDK (js-client-sdk) and\n    // is no longer needed as of version 2.9.13 of that SDK. The other client-side\n    // JS-based SDKs did not define customEventFilter, and now none of them do. We\n    // can remove this in the next major version of the common code, when it's OK to\n    // make breaking changes to our internal API contracts.\n    if (platform.customEventFilter && !platform.customEventFilter(key)) {\n      logger.warn(messages.unknownCustomEventKey(key));\n    }\n\n    const user = ident.getUser();\n    const e = {\n      kind: 'custom',\n      key: key,\n      user: user,\n      url: platform.getCurrentUrl(),\n      creationDate: new Date().getTime(),\n    };\n    if (user && user.anonymous) {\n      e.contextKind = userContextKind(user);\n    }\n    // Note, check specifically for null/undefined because it is legal to set these fields to a falsey value.\n    if (data !== null && data !== undefined) {\n      e.data = data;\n    }\n    if (metricValue !== null && metricValue !== undefined) {\n      e.metricValue = metricValue;\n    }\n    enqueueEvent(e);\n  }\n\n  function connectStream() {\n    streamActive = true;\n    if (!ident.getUser()) {\n      return;\n    }\n    const tryParseData = jsonData => {\n      try {\n        return JSON.parse(jsonData);\n      } catch (err) {\n        emitter.maybeReportError(new errors.LDInvalidDataError(messages.invalidData()));\n        return undefined;\n      }\n    };\n    stream.connect(ident.getUser(), hash, {\n      ping: function() {\n        logger.debug(messages.debugStreamPing());\n        const userAtTimeOfPingEvent = ident.getUser();\n        requestor\n          .fetchFlagSettings(userAtTimeOfPingEvent, hash)\n          .then(requestedFlags => {\n            // Check whether the current user is still the same - we don't want to overwrite the flags if\n            // the application has called identify() while this request was in progress\n            if (utils.deepEquals(userAtTimeOfPingEvent, ident.getUser())) {\n              replaceAllFlags(requestedFlags || {});\n            }\n          })\n          .catch(err => {\n            emitter.maybeReportError(new errors.LDFlagFetchError(messages.errorFetchingFlags(err)));\n          });\n      },\n      put: function(e) {\n        const data = tryParseData(e.data);\n        if (!data) {\n          return;\n        }\n        logger.debug(messages.debugStreamPut());\n        replaceAllFlags(data);\n        // Don't wait for this Promise to be resolved; note that replaceAllFlags is guaranteed\n        // never to have an unhandled rejection\n      },\n      patch: function(e) {\n        const data = tryParseData(e.data);\n        if (!data) {\n          return;\n        }\n        // If both the flag and the patch have a version property, then the patch version must be\n        // greater than the flag version for us to accept the patch.  If either one has no version\n        // then the patch always succeeds.\n        const oldFlag = flags[data.key];\n        if (!oldFlag || !oldFlag.version || !data.version || oldFlag.version < data.version) {\n          logger.debug(messages.debugStreamPatch(data.key));\n          const mods = {};\n          const newFlag = utils.extend({}, data);\n          delete newFlag['key'];\n          flags[data.key] = newFlag;\n          const newDetail = getFlagDetail(newFlag);\n          if (oldFlag) {\n            mods[data.key] = { previous: oldFlag.value, current: newDetail };\n          } else {\n            mods[data.key] = { current: newDetail };\n          }\n          handleFlagChanges(mods); // don't wait for this Promise to be resolved\n        } else {\n          logger.debug(messages.debugStreamPatchIgnored(data.key));\n        }\n      },\n      delete: function(e) {\n        const data = tryParseData(e.data);\n        if (!data) {\n          return;\n        }\n        if (!flags[data.key] || flags[data.key].version < data.version) {\n          logger.debug(messages.debugStreamDelete(data.key));\n          const mods = {};\n          if (flags[data.key] && !flags[data.key].deleted) {\n            mods[data.key] = { previous: flags[data.key].value };\n          }\n          flags[data.key] = { version: data.version, deleted: true };\n          handleFlagChanges(mods); // don't wait for this Promise to be resolved\n        } else {\n          logger.debug(messages.debugStreamDeleteIgnored(data.key));\n        }\n      },\n    });\n  }\n\n  function disconnectStream() {\n    if (streamActive) {\n      stream.disconnect();\n      streamActive = false;\n    }\n  }\n\n  // Returns a Promise which will be resolved when we have completely updated the internal flags state,\n  // dispatched all change events, and updated local storage if appropriate. This Promise is guaranteed\n  // never to have an unhandled rejection.\n  function replaceAllFlags(newFlags) {\n    const changes = {};\n\n    if (!newFlags) {\n      return Promise.resolve();\n    }\n\n    for (const key in flags) {\n      if (utils.objectHasOwnProperty(flags, key) && flags[key]) {\n        if (newFlags[key] && !utils.deepEquals(newFlags[key].value, flags[key].value)) {\n          changes[key] = { previous: flags[key].value, current: getFlagDetail(newFlags[key]) };\n        } else if (!newFlags[key] || newFlags[key].deleted) {\n          changes[key] = { previous: flags[key].value };\n        }\n      }\n    }\n    for (const key in newFlags) {\n      if (utils.objectHasOwnProperty(newFlags, key) && newFlags[key] && (!flags[key] || flags[key].deleted)) {\n        changes[key] = { current: getFlagDetail(newFlags[key]) };\n      }\n    }\n\n    flags = { ...newFlags };\n    return handleFlagChanges(changes).catch(() => {}); // swallow any exceptions from this Promise\n  }\n\n  // Returns a Promise which will be resolved when we have dispatched all change events and updated\n  // local storage if appropriate.\n  function handleFlagChanges(changes) {\n    const keys = Object.keys(changes);\n\n    if (keys.length > 0) {\n      const changeEventParams = {};\n      keys.forEach(key => {\n        const current = changes[key].current;\n        const value = current ? current.value : undefined;\n        const previous = changes[key].previous;\n        emitter.emit(changeEvent + ':' + key, value, previous);\n        changeEventParams[key] = current ? { current: value, previous: previous } : { previous: previous };\n      });\n\n      emitter.emit(changeEvent, changeEventParams);\n      emitter.emit(internalChangeEvent, flags);\n\n      // By default, we send feature evaluation events whenever we have received new flag values -\n      // the client has in effect evaluated these flags just by receiving them. This can be suppressed\n      // by setting \"sendEventsOnlyForVariation\". Also, if we have a stateProvider, we don't send these\n      // events because we assume they have already been sent by the other client that gave us the flags\n      // (when it received them in the first place).\n      if (!options.sendEventsOnlyForVariation && !stateProvider) {\n        keys.forEach(key => {\n          sendFlagEvent(key, changes[key].current);\n        });\n      }\n    }\n\n    if (useLocalStorage && persistentFlagStore) {\n      return persistentFlagStore.saveFlags(flags);\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  function on(event, handler, context) {\n    if (isChangeEventKey(event)) {\n      subscribedToChangeEvents = true;\n      if (inited) {\n        updateStreamingState();\n      }\n      emitter.on(event, handler, context);\n    } else {\n      emitter.on(...arguments);\n    }\n  }\n\n  function off(event) {\n    emitter.off(...arguments);\n    if (isChangeEventKey(event)) {\n      let haveListeners = false;\n      emitter.getEvents().forEach(key => {\n        if (isChangeEventKey(key) && emitter.getEventListenerCount(key) > 0) {\n          haveListeners = true;\n        }\n      });\n      if (!haveListeners) {\n        subscribedToChangeEvents = false;\n        if (streamActive && streamForcedState === undefined) {\n          disconnectStream();\n        }\n      }\n    }\n  }\n\n  function setStreaming(state) {\n    const newState = state === null ? undefined : state;\n    if (newState !== streamForcedState) {\n      streamForcedState = newState;\n      updateStreamingState();\n    }\n  }\n\n  function updateStreamingState() {\n    const shouldBeStreaming = streamForcedState || (subscribedToChangeEvents && streamForcedState === undefined);\n    if (shouldBeStreaming && !streamActive) {\n      connectStream();\n    } else if (!shouldBeStreaming && streamActive) {\n      disconnectStream();\n    }\n    if (diagnosticsManager) {\n      diagnosticsManager.setStreaming(shouldBeStreaming);\n    }\n  }\n\n  function isChangeEventKey(event) {\n    return event === changeEvent || event.substr(0, changeEvent.length + 1) === changeEvent + ':';\n  }\n\n  if (typeof options.bootstrap === 'string' && options.bootstrap.toUpperCase() === 'LOCALSTORAGE') {\n    if (persistentFlagStore) {\n      useLocalStorage = true;\n    } else {\n      logger.warn(messages.localStorageUnavailable());\n    }\n  }\n\n  if (typeof options.bootstrap === 'object') {\n    // Set the flags as soon as possible before we get into any async code, so application code can read\n    // them even if the ready event has not yet fired.\n    flags = readFlagsFromBootstrap(options.bootstrap);\n  }\n\n  if (stateProvider) {\n    // The stateProvider option is used in the Electron SDK, to allow a client instance in the main process\n    // to control another client instance (i.e. this one) in the renderer process. We can't predict which\n    // one will start up first, so the initial state may already be available for us or we may have to wait\n    // to receive it.\n    const state = stateProvider.getInitialState();\n    if (state) {\n      initFromStateProvider(state);\n    } else {\n      stateProvider.on('init', initFromStateProvider);\n    }\n    stateProvider.on('update', updateFromStateProvider);\n  } else {\n    finishInit().catch(signalFailedInit);\n  }\n\n  function finishInit() {\n    if (!env) {\n      return Promise.reject(new errors.LDInvalidEnvironmentIdError(messages.environmentNotSpecified()));\n    }\n    return userValidator.validateUser(user).then(realUser => {\n      ident.setUser(realUser);\n      if (typeof options.bootstrap === 'object') {\n        // flags have already been set earlier\n        return signalSuccessfulInit();\n      } else if (useLocalStorage) {\n        return finishInitWithLocalStorage();\n      } else {\n        return finishInitWithPolling();\n      }\n    });\n  }\n\n  function finishInitWithLocalStorage() {\n    return persistentFlagStore.loadFlags().then(storedFlags => {\n      if (storedFlags === null || storedFlags === undefined) {\n        flags = {};\n        return requestor\n          .fetchFlagSettings(ident.getUser(), hash)\n          .then(requestedFlags => replaceAllFlags(requestedFlags || {}))\n          .then(signalSuccessfulInit)\n          .catch(err => {\n            const initErr = new errors.LDFlagFetchError(messages.errorFetchingFlags(err));\n            signalFailedInit(initErr);\n          });\n      } else {\n        // We're reading the flags from local storage. Signal that we're ready,\n        // then update localStorage for the next page load. We won't signal changes or update\n        // the in-memory flags unless you subscribe for changes\n        flags = storedFlags;\n        utils.onNextTick(signalSuccessfulInit);\n\n        return requestor\n          .fetchFlagSettings(ident.getUser(), hash)\n          .then(requestedFlags => replaceAllFlags(requestedFlags))\n          .catch(err => emitter.maybeReportError(err));\n      }\n    });\n  }\n\n  function finishInitWithPolling() {\n    return requestor\n      .fetchFlagSettings(ident.getUser(), hash)\n      .then(requestedFlags => {\n        flags = requestedFlags || {};\n        // Note, we don't need to call updateSettings here because local storage and change events are not relevant\n        signalSuccessfulInit();\n      })\n      .catch(err => {\n        flags = {};\n        signalFailedInit(err);\n      });\n  }\n\n  function initFromStateProvider(state) {\n    environment = state.environment;\n    ident.setUser(state.user);\n    flags = { ...state.flags };\n    utils.onNextTick(signalSuccessfulInit);\n  }\n\n  function updateFromStateProvider(state) {\n    if (state.user) {\n      ident.setUser(state.user);\n    }\n    if (state.flags) {\n      replaceAllFlags(state.flags); // don't wait for this Promise to be resolved\n    }\n  }\n\n  function signalSuccessfulInit() {\n    logger.info(messages.clientInitialized());\n    inited = true;\n    updateStreamingState();\n    initializationStateTracker.signalSuccess();\n  }\n\n  function signalFailedInit(err) {\n    initializationStateTracker.signalFailure(err);\n  }\n\n  function start() {\n    if (sendEvents) {\n      if (diagnosticsManager) {\n        diagnosticsManager.start();\n      }\n      events.start();\n    }\n  }\n\n  function close(onDone) {\n    if (closed) {\n      return utils.wrapPromiseCallback(Promise.resolve(), onDone);\n    }\n    const finishClose = () => {\n      closed = true;\n      flags = {};\n    };\n    const p = Promise.resolve()\n      .then(() => {\n        disconnectStream();\n        if (diagnosticsManager) {\n          diagnosticsManager.stop();\n        }\n        if (sendEvents) {\n          events.stop();\n          return events.flush();\n        }\n      })\n      .then(finishClose)\n      .catch(finishClose);\n    return utils.wrapPromiseCallback(p, onDone);\n  }\n\n  function getFlagsInternal() {\n    // used by Electron integration\n    return flags;\n  }\n\n  const client = {\n    waitForInitialization: () => initializationStateTracker.getInitializationPromise(),\n    waitUntilReady: () => initializationStateTracker.getReadyPromise(),\n    identify: identify,\n    getUser: getUser,\n    variation: variation,\n    variationDetail: variationDetail,\n    track: track,\n    alias: alias,\n    on: on,\n    off: off,\n    setStreaming: setStreaming,\n    flush: flush,\n    allFlags: allFlags,\n    close: close,\n  };\n\n  return {\n    client: client, // The client object containing all public methods.\n    options: options, // The validated configuration object, including all defaults.\n    emitter: emitter, // The event emitter which can be used to log errors or trigger events.\n    ident: ident, // The Identity object that manages the current user.\n    logger: logger, // The logging abstraction.\n    requestor: requestor, // The Requestor object.\n    start: start, // Starts the client once the environment is ready.\n    enqueueEvent: enqueueEvent, // Puts an analytics event in the queue, if event sending is enabled.\n    getFlagsInternal: getFlagsInternal, // Returns flag data structure with all details.\n    getEnvironmentId: () => environment, // Gets the environment ID (this may have changed since initialization, if we have a state provider)\n    internalChangeEventName: internalChangeEvent, // This event is triggered whenever we have new flag state.\n  };\n}\n\nexport const version = VERSION;\nexport { commonBasicLogger };\nexport { createConsoleLogger };\nexport { errors };\nexport { messages };\nexport { utils };\n","import * as messages from './messages';\n\n// The localStorageProvider is provided by the platform object. It should have the following\n// methods, each of which should return a Promise:\n// - get(key): Gets the string value, if any, for the given key\n// - set(key, value): Stores a string value for the given key\n// - remove(key): Removes the given key\n//\n// Storage is just a light wrapper of the localStorageProvider, adding error handling and\n// ensuring that we don't call it if it's unavailable. The get method will simply resolve\n// with an undefined value if there is an error or if there is no localStorageProvider.\n// None of the promises returned by Storage will ever be rejected.\n//\n// It is always possible that the underlying platform storage mechanism might fail or be\n// disabled. If so, it's likely that it will keep failing, so we will only log one warning\n// instead of repetitive warnings.\nexport default function PersistentStorage(localStorageProvider, logger) {\n  const storage = {};\n  let loggedError = false;\n\n  const logError = err => {\n    if (!loggedError) {\n      loggedError = true;\n      logger.warn(messages.localStorageUnavailable(err));\n    }\n  };\n\n  storage.isEnabled = () => !!localStorageProvider;\n\n  // Resolves with a value, or undefined if storage is unavailable. Never rejects.\n  storage.get = key =>\n    new Promise(resolve => {\n      if (!localStorageProvider) {\n        resolve(undefined);\n        return;\n      }\n      localStorageProvider\n        .get(key)\n        .then(resolve)\n        .catch(err => {\n          logError(err);\n          resolve(undefined);\n        });\n    });\n\n  // Resolves with true if successful, or false if storage is unavailable. Never rejects.\n  storage.set = (key, value) =>\n    new Promise(resolve => {\n      if (!localStorageProvider) {\n        resolve(false);\n        return;\n      }\n      localStorageProvider\n        .set(key, value)\n        .then(() => resolve(true))\n        .catch(err => {\n          logError(err);\n          resolve(false);\n        });\n    });\n\n  // Resolves with true if successful, or false if storage is unavailable. Never rejects.\n  storage.clear = key =>\n    new Promise(resolve => {\n      if (!localStorageProvider) {\n        resolve(false);\n        return;\n      }\n      localStorageProvider\n        .clear(key)\n        .then(() => resolve(true))\n        .catch(err => {\n          logError(err);\n          resolve(false);\n        });\n    });\n\n  return storage;\n}\n","import EventSender from './EventSender';\nimport EventSummarizer from './EventSummarizer';\nimport UserFilter from './UserFilter';\nimport * as errors from './errors';\nimport * as messages from './messages';\nimport * as utils from './utils';\n\nexport default function EventProcessor(\n  platform,\n  options,\n  environmentId,\n  diagnosticsAccumulator = null,\n  emitter = null,\n  sender = null\n) {\n  const processor = {};\n  const eventSender = sender || EventSender(platform, environmentId, options);\n  const mainEventsUrl = utils.appendUrlPath(options.eventsUrl, '/events/bulk/' + environmentId);\n  const summarizer = EventSummarizer();\n  const userFilter = UserFilter(options);\n  const inlineUsers = options.inlineUsersInEvents;\n  const samplingInterval = options.samplingInterval;\n  const eventCapacity = options.eventCapacity;\n  const flushInterval = options.flushInterval;\n  const logger = options.logger;\n  let queue = [];\n  let lastKnownPastTime = 0;\n  let disabled = false;\n  let exceededCapacity = false;\n  let flushTimer;\n\n  function shouldSampleEvent() {\n    return samplingInterval === 0 || Math.floor(Math.random() * samplingInterval) === 0;\n  }\n\n  function shouldDebugEvent(e) {\n    if (e.debugEventsUntilDate) {\n      // The \"last known past time\" comes from the last HTTP response we got from the server.\n      // In case the client's time is set wrong, at least we know that any expiration date\n      // earlier than that point is definitely in the past.  If there's any discrepancy, we\n      // want to err on the side of cutting off event debugging sooner.\n      return e.debugEventsUntilDate > lastKnownPastTime && e.debugEventsUntilDate > new Date().getTime();\n    }\n    return false;\n  }\n\n  // Transform an event from its internal format to the format we use when sending a payload.\n  function makeOutputEvent(e) {\n    const ret = utils.extend({}, e);\n    if (e.kind === 'alias') {\n      // alias events do not require any transformation\n      return ret;\n    }\n    if (inlineUsers || e.kind === 'identify') {\n      // identify events always have an inline user\n      ret.user = userFilter.filterUser(e.user);\n    } else {\n      ret.userKey = e.user.key;\n      delete ret['user'];\n    }\n    if (e.kind === 'feature') {\n      delete ret['trackEvents'];\n      delete ret['debugEventsUntilDate'];\n    }\n    return ret;\n  }\n\n  function addToOutbox(event) {\n    if (queue.length < eventCapacity) {\n      queue.push(event);\n      exceededCapacity = false;\n    } else {\n      if (!exceededCapacity) {\n        exceededCapacity = true;\n        logger.warn(messages.eventCapacityExceeded());\n      }\n      if (diagnosticsAccumulator) {\n        // For diagnostic events, we track how many times we had to drop an event due to exceeding the capacity.\n        diagnosticsAccumulator.incrementDroppedEvents();\n      }\n    }\n  }\n\n  processor.enqueue = function(event) {\n    if (disabled) {\n      return;\n    }\n    let addFullEvent = false;\n    let addDebugEvent = false;\n\n    // Add event to the summary counters if appropriate\n    summarizer.summarizeEvent(event);\n\n    // Decide whether to add the event to the payload. Feature events may be added twice, once for\n    // the event (if tracked) and once for debugging.\n    if (event.kind === 'feature') {\n      if (shouldSampleEvent()) {\n        addFullEvent = !!event.trackEvents;\n        addDebugEvent = shouldDebugEvent(event);\n      }\n    } else {\n      addFullEvent = shouldSampleEvent();\n    }\n\n    if (addFullEvent) {\n      addToOutbox(makeOutputEvent(event));\n    }\n    if (addDebugEvent) {\n      const debugEvent = utils.extend({}, event, { kind: 'debug' });\n      debugEvent.user = userFilter.filterUser(debugEvent.user);\n      delete debugEvent['trackEvents'];\n      delete debugEvent['debugEventsUntilDate'];\n      addToOutbox(debugEvent);\n    }\n  };\n\n  processor.flush = function() {\n    if (disabled) {\n      return Promise.resolve();\n    }\n    const eventsToSend = queue;\n    const summary = summarizer.getSummary();\n    summarizer.clearSummary();\n    if (summary) {\n      summary.kind = 'summary';\n      eventsToSend.push(summary);\n    }\n    if (diagnosticsAccumulator) {\n      // For diagnostic events, we record how many events were in the queue at the last flush (since \"how\n      // many events happened to be in the queue at the moment we decided to send a diagnostic event\" would\n      // not be a very useful statistic).\n      diagnosticsAccumulator.setEventsInLastBatch(eventsToSend.length);\n    }\n    if (eventsToSend.length === 0) {\n      return Promise.resolve();\n    }\n    queue = [];\n    logger.debug(messages.debugPostingEvents(eventsToSend.length));\n    return eventSender.sendEvents(eventsToSend, mainEventsUrl).then(responseInfo => {\n      if (responseInfo) {\n        if (responseInfo.serverTime) {\n          lastKnownPastTime = responseInfo.serverTime;\n        }\n        if (!errors.isHttpErrorRecoverable(responseInfo.status)) {\n          disabled = true;\n        }\n        if (responseInfo.status >= 400) {\n          utils.onNextTick(() => {\n            emitter.maybeReportError(\n              new errors.LDUnexpectedResponseError(\n                messages.httpErrorMessage(responseInfo.status, 'event posting', 'some events were dropped')\n              )\n            );\n          });\n        }\n      }\n    });\n  };\n\n  processor.start = function() {\n    const flushTick = () => {\n      processor.flush();\n      flushTimer = setTimeout(flushTick, flushInterval);\n    };\n    flushTimer = setTimeout(flushTick, flushInterval);\n  };\n\n  processor.stop = function() {\n    clearTimeout(flushTimer);\n  };\n\n  return processor;\n}\n","import * as utils from './utils';\n\nexport default function Identity(initialUser, onChange) {\n  const ident = {};\n  let user;\n\n  ident.setUser = function(u) {\n    const previousUser = user && utils.clone(user);\n    user = utils.sanitizeUser(u);\n    if (user && onChange) {\n      onChange(utils.clone(user), previousUser);\n    }\n  };\n\n  ident.getUser = function() {\n    return user ? utils.clone(user) : null;\n  };\n\n  if (initialUser) {\n    ident.setUser(initialUser);\n  }\n\n  return ident;\n}\n"],"names":["createCustomError","name","CustomError","message","code","Error","captureStackTrace","this","constructor","prototype","LDUnexpectedResponseError","LDInvalidEnvironmentIdError","LDInvalidUserError","LDInvalidEventKeyError","LDInvalidArgumentError","LDFlagFetchError","LDInvalidDataError","isHttpErrorRecoverable","status","uint8","tmp","len","length","extraBytes","parts","i","len2","push","encodeChunk","lookup","join","revLookup","charCodeAt","start","end","num","output","isArray","Array","keyList","Object","keys","hasProp","hasOwnProperty","userAttrsToStringify","appendUrlPath","baseUrl","path","endsWith","substring","startsWith","btoa","s","escaped","unescape","encodeURIComponent","base64","b","stringToBytes","base64URLEncode","replace","clone","obj","JSON","parse","stringify","deepEquals","a","equal","key","arrA","arrB","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","toString","call","fastDeepEqual","onNextTick","cb","setTimeout","wrapPromiseCallback","promise","callback","ret","then","value","error","Promise","reject","undefined","transformValuesToVersionedValues","flags","objectHasOwnProperty","version","transformVersionedValuesToValues","flagsState","chunkUserEventsForUrl","maxLength","events","chunk","allEvents","slice","allChunks","remainingSpace","event","shift","unshift","getLDUserAgentString","platform","userAgent","extend","objects","reduce","acc","object","sanitizeUser","user","newUser","attr","String","getRandomValues","crypto","bind","window","msCrypto","rnds8","Uint8Array","module","rnds","r","Math","random","byteToHex","substr","_nodeId","_clockseq","buf","offset","bth","_lastMSecs","_lastNSecs","options","node","clockseq","seedBytes","rng","msecs","nsecs","dt","tl","tmh","n","bytesToUuid","logLevels","commonBasicLogger","formatFn","destination","toConsole","methodName","line","console","destinations","prependLevelToMessage","prefix","minLevel","level","write","levelIndex","levelName","args","fullPrefix","tempArgs","err","log","logger","arguments","createConsoleLogger","maybePrefix","errorString","clientInitialized","docLink","eventCapacityExceeded","eventWithoutUser","invalidContentType","contentType","localStorageUnavailable","networkError","e","unknownCustomEventKey","environmentNotFound","environmentNotSpecified","errorFetchingFlags","userNotSpecified","invalidUser","invalidData","bootstrapOldFormat","bootstrapInvalid","deprecated","oldName","newName","httpErrorMessage","context","retryMessage","errors","httpUnavailable","identifyDisabled","streamClosing","streamConnecting","url","streamError","streamReconnectDelay","unknownOption","wrongOptionType","expectedType","actualType","wrongOptionTypeBoolean","optionBelowMinimum","minimum","debugPolling","debugStreamPing","debugStreamPut","debugStreamPatch","debugStreamPatchIgnored","debugStreamDelete","debugStreamDeleteIgnored","debugEnqueueingEvent","kind","debugPostingEvents","count","invalidTagValue","baseOptionDefs","default","streamUrl","eventsUrl","sendEvents","streaming","type","sendLDHeaders","requestHeaderTransform","inlineUsersInEvents","allowFrequentDuplicateEvents","sendEventsOnlyForVariation","useReport","evaluationReasons","eventCapacity","flushInterval","samplingInterval","allAttributesPrivate","privateAttributeNames","bootstrap","diagnosticRecordingInterval","diagnosticOptOut","wrapperName","wrapperVersion","stateProvider","autoAliasingOptOut","application","validator","config","validated","id","validateTagValue","allowedTagCharacters","tagValue","match","warn","messages","validate","emitter","extraOptionDefs","optionDefs","utils","deprecatedOptions","all_attributes_private","private_attribute_names","reportArgumentError","maybeReportError","opts","forEach","checkDeprecatedOptions","validateLogger","typeDescForValue","t","optionDef","allowedTypes","split","indexOf","validateTypesAndNames","applyDefaults","getTags","tags","getLDHeaders","h","tagKeys","sort","flatMap","map","transformHeaders","headers","EventSender","environmentId","imageUrlPath","baseHeaders","httpFallbackPing","sender","sendChunk","isDiagnostic","usePost","jsonBody","payloadId","uuidv1","doPostRequest","canRetry","httpRequest","result","dateStr","header","time","serverTime","getResponseInfo","catch","resolve","chunks","canPost","httpAllowsPost","results","all","EventSummarizer","es","startDate","endDate","counters","summarizeEvent","counterKey","variation","counterVal","creationDate","getSummary","flagsOut","empty","c","flag","counterOut","unknown","features","clearSummary","UserFilter","filter","ignoreAttrs","custom","anonymous","allowedTopLevelAttrs","secondary","ip","country","email","firstName","lastName","avatar","filterUser","userPrivateAttrs","filterAttrs","props","isAttributeAllowed","isPrivateAttr","filteredProps","removedAttrs","customResult","removedAttrNames","privateAttrs","EventEmitter","on","handler","concat","off","emit","copiedHandlers","apply","getEvents","getEventListenerCount","eventEmitter","succeeded","failed","failureValue","initializationPromise","readyPromise","onReady","getInitializationPromise","onSuccess","onFailure","getReadyPromise","signalSuccess","signalFailure","PersistentFlagStore","storage","environment","hash","ident","store","getFlagsKey","getUser","loadFlags","get","dataStr","data","schema","$schema","ex","clearFlags","saveFlags","set","clear","Stream","diagnosticsAccumulator","connectionAttemptStartTime","stream","evalUrlPrefix","withReasons","firstConnectionErrorLogged","reconnectTimeoutReference","handlers","handleError","logConnectionResult","closeConnection","tryConnect","delay","openConnection","query","readTimeoutMillis","eventSourceFactory","eventSourceAllowsReport","method","body","info","addEventListener","onerror","close","success","recordStreamInit","connect","newHash","newHandlers","disconnect","clearTimeout","isConnected","eventSourceIsActive","Requestor","requestor","activeRequests","fetchJSON","endpoint","coalescer","finallyFn","currentPromise","currentCancelFn","finalResolve","finalReject","p","cancelFn","resultPromise","promiseCoalescer","req","statusText","getResponseError","addPromise","cancel","fetchFlagSettings","debug","UserValidator","persistentStorage","validateUser","userOut","cachedId","setCachedUserId","require$$1","sdkKey","diagnosticId","sdkKeySuffix","startTime","dataSinceDate","droppedEvents","eventsInLastBatch","streamInits","reset","getProps","setProps","incrementDroppedEvents","setEventsInLastBatch","timestamp","durationMillis","accumulator","eventSender","eventSentTime","periodicTimer","combinedMode","diagnosticUseCombinedEvent","localStorageKey","diagnosticEventsUrl","periodicInterval","streamingEnabled","manager","makeInitProperties","sdk","makeSdkData","configuration","configData","customBaseURI","customStreamURI","customEventsURI","eventsCapacity","eventsFlushIntervalMillis","reconnectTimeMillis","streamingDisabled","diagnosticRecordingIntervalMillis","usingSecureMode","bootstrapMode","fetchGoalsDisabled","fetchGoals","diagnosticPlatformData","sendDiagnosticEvent","debugPostingDiagnosticEvent","sendPeriodicEvent","currentTime","isEnabled","saveProperties","sdkData","diagnosticSdkData","loadProperties","localStorageAvailable","nextEventTime","timeNow","floor","stop","setStreaming","enabled","initialize","env","specifiedOptions","useLocalStorage","streamActive","subscribedToChangeEvents","createLogger","initializationStateTracker","InitializationStateTracker","localStorageProvider","loggedError","logError","PersistentStorage","localStorage","diagnosticsEnabled","diagnostics","diagnosticsManager","eventProcessor","flushTimer","processor","mainEventsUrl","summarizer","userFilter","inlineUsers","queue","lastKnownPastTime","disabled","exceededCapacity","shouldSampleEvent","shouldDebugEvent","debugEventsUntilDate","makeOutputEvent","userKey","addToOutbox","enqueue","addFullEvent","addDebugEvent","trackEvents","debugEvent","flush","eventsToSend","summary","responseInfo","flushTick","EventProcessor","seenRequests","streamForcedState","inited","closed","firstEvent","initialUser","onChange","setUser","u","previousUser","Identity","enqueueEvent","sendIdentifyEvent","alias","userValidator","persistentFlagStore","isDoNotTrack","sendFlagEvent","detail","defaultValue","includeReason","now","cacheKey","cached","variationIndex","contextKind","userContextKind","flagVersion","trackReason","reason","variationDetailInternal","sendEvent","includeReasonInEvent","deleted","getFlagDetail","errorKind","previousKey","previousContextKind","connectStream","tryParseData","jsonData","ping","userAtTimeOfPingEvent","requestedFlags","replaceAllFlags","put","patch","oldFlag","mods","newFlag","newDetail","previous","current","handleFlagChanges","delete","disconnectStream","newFlags","changes","changeEventParams","changeEvent","updateStreamingState","shouldBeStreaming","isChangeEventKey","toUpperCase","_typeof","metadata","readFlagsFromBootstrap","state","getInitialState","initFromStateProvider","realUser","signalSuccessfulInit","storedFlags","signalFailedInit","finishInit","client","waitForInitialization","waitUntilReady","identify","onDone","flagValueMap","variationDetail","track","metricValue","customEventFilter","getCurrentUrl","haveListeners","newState","allFlags","finishClose","getFlagsInternal","getEnvironmentId","internalChangeEventName"],"mappings":"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"}